{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport ListItem from \"./ListItem\";\nimport { deleteTodosDB } from \"../../http/todoAPI\";\nimport { deleteTodo } from \"../../store/todoSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport HiddenListItem from \"./HiddenListItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar rowTranslateAnimatedValues = {};\nArray(20).fill('').forEach(function (_, i) {\n  rowTranslateAnimatedValues[\"\" + i] = new Animated.Value(1);\n});\n\nvar List = function List() {\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.todo;\n  }),\n      todos = _useAppSelector.todos;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoId = _useState2[0],\n      setTodoId = _useState2[1];\n\n  var dispatch = useAppDispatch();\n\n  var onRightAction = function onRightAction(id) {\n    setTodoId(id);\n  };\n\n  useEffect(function () {\n    var onDelete = function onDelete(id) {\n      return _regeneratorRuntime.async(function onDelete$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(deleteTodo(id));\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(deleteTodosDB(id));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    !!todoId && onDelete(todoId);\n  }, [todoId]);\n\n  var onSwipeValueChange = function onSwipeValueChange(swipeData) {\n    var key = swipeData.key,\n        value = swipeData.value;\n\n    if (value < -Dimensions.get('window').width && !animationIsRunning) {\n      _this.animationIsRunning = true;\n      Animated.timing(rowTranslateAnimatedValues[key], {\n        toValue: 0,\n        duration: 200\n      }).start(function () {\n        var newData = _toConsumableArray(todos);\n\n        var prevIndex = todos.findIndex(function (item) {\n          return item.id === key;\n        });\n        newData.splice(prevIndex, 1);\n        setListData(newData);\n        _this.animationIsRunning = false;\n      });\n    }\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(SwipeListView, {\n      data: todos,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ListItem, {\n          todo: item\n        });\n      },\n      keyExtractor: function keyExtractor(_ref2) {\n        var id = _ref2.id;\n        return id;\n      },\n      renderHiddenItem: HiddenListItem,\n      useNativeDriver: false,\n      rightActivationValue: -150,\n      rightActionValue: -500,\n      onRightAction: onRightAction,\n      onSwipeValueChange: onSwipeValueChange,\n      disableRightSwipe: true\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 2,\n    marginBottom: 10,\n    width: \"100%\",\n    maxWidth: 500\n  }\n});\nexport default List;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/List/List.tsx"],"names":["React","useEffect","useState","SwipeListView","ListItem","deleteTodosDB","deleteTodo","useAppDispatch","useAppSelector","HiddenListItem","rowTranslateAnimatedValues","Array","fill","forEach","_","i","Animated","Value","List","state","todo","todos","todoId","setTodoId","dispatch","onRightAction","id","onDelete","onSwipeValueChange","swipeData","key","value","Dimensions","get","width","animationIsRunning","timing","toValue","duration","start","newData","prevIndex","findIndex","item","splice","setListData","styles","container","StyleSheet","create","flex","marginBottom","maxWidth"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\nimport { Animated, Dimensions, StyleSheet, View } from \"react-native\";\r\nimport { SwipeListView } from \"react-native-swipe-list-view\";\r\n\r\nimport ListItem from \"./ListItem\";\r\nimport { deleteTodosDB } from \"../../http/todoAPI\";\r\nimport { deleteTodo } from \"../../store/todoSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport HiddenListItem from \"./HiddenListItem\";\r\n\r\nconst rowTranslateAnimatedValues = {};\r\nArray(20)\r\n    .fill('')\r\n    .forEach((_, i) => {\r\n        rowTranslateAnimatedValues[`${i}`] = new Animated.Value(1);\r\n    });\r\n\r\nconst List: FC = () => {\r\n  const { todos } = useAppSelector((state) => state.todo);\r\n  const [todoId, setTodoId] = useState<string>(\"\");\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onRightAction = (id: string) => {\r\n    // This fnc return ListItem ID\r\n    setTodoId(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onDelete = async (id: string) => {\r\n      dispatch(deleteTodo(id));\r\n      await deleteTodosDB(id);\r\n    };\r\n    !!todoId && onDelete(todoId);\r\n  }, [todoId]);\r\n\r\n\r\n  const onSwipeValueChange = swipeData => {\r\n\tconst { key, value } = swipeData;\r\n\tif (\r\n\t\t value < -Dimensions.get('window').width &&\r\n\t\t !animationIsRunning\r\n\t) {\r\n\t\t this.animationIsRunning = true;\r\n\t\t Animated.timing(rowTranslateAnimatedValues[key], {\r\n\t\t\t  toValue: 0,\r\n\t\t\t  duration: 200,\r\n\t\t }).start(() => {\r\n\t\t\t  const newData = [...todos];\r\n\t\t\t  const prevIndex = todos.findIndex(item => item.id === key);\r\n\t\t\t  newData.splice(prevIndex, 1);\r\n\t\t\t  setListData(newData);\r\n\t\t\t  this.animationIsRunning = false;\r\n\t\t });\r\n\t}\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <SwipeListView\r\n        data={todos}\r\n        renderItem={({ item }) => <ListItem todo={item} />}\r\n        keyExtractor={({ id }) => id}\r\n        renderHiddenItem={HiddenListItem}\r\n        useNativeDriver={false}\r\n        rightActivationValue={-150}\r\n        rightActionValue={-500}\r\n        onRightAction={onRightAction}\r\n\t\t  onSwipeValueChange={onSwipeValueChange}\r\n        disableRightSwipe\r\n\t\t\r\n/>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 2,\r\n    marginBottom: 10,\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n});\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}