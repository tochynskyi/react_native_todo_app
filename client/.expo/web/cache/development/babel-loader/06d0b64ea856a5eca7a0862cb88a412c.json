{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useAppDispatch } from \"../store/hooks\";\nimport { logout } from \"../http/userAPI\";\nimport { userLogout } from \"../store/userSlice\";\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { sortByDate, sortByPriority } from \"../store/todoSlice\";\nimport dayjs from 'dayjs';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar sortOptions = ['Date', 'Priority'];\nexport var Header = function Header() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      sort = _useState2[0],\n      setSort = _useState2[1];\n\n  var dispatch = useAppDispatch();\n\n  var onLogout = function onLogout() {\n    return _regeneratorRuntime.async(function onLogout$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            logout();\n            dispatch(userLogout());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(sort);\n  useEffect(function () {\n    if (sort === 'Priority') {\n      dispatch(sortByPriority());\n      return;\n    }\n\n    if (sort === 'Date') {\n      dispatch(sortByDate());\n      return;\n    }\n  }, [sort]);\n  return _jsxs(View, {\n    style: [styles.container, glo],\n    children: [_jsx(View, {\n      style: styles.title,\n      children: _jsxs(Text, {\n        children: [\"Today \", dayjs().format('DD MMM')]\n      })\n    }), _jsx(ModalDropdown, {\n      defaultValue: \"Sort by\",\n      options: sortOptions,\n      onSelect: function onSelect(idx, value) {\n        return setSort(value);\n      },\n      style: styles.sortModal\n    }), _jsx(Pressable, {\n      onPress: onLogout,\n      children: _jsx(Text, {\n        children: \"Logout\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#e4e3e3\",\n    borderBottomWidth: 1,\n    padding: 10,\n    marginTop: 15,\n    height: 30,\n    width: \"100%\"\n  },\n  title: {\n    flex: 1\n  },\n  sortModal: {\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/Header.tsx"],"names":["React","useEffect","useState","useAppDispatch","logout","userLogout","ModalDropdown","sortByDate","sortByPriority","dayjs","sortOptions","Header","sort","setSort","dispatch","onLogout","console","log","styles","container","glo","title","format","idx","value","sortModal","StyleSheet","create","display","flexDirection","alignItems","borderColor","borderBottomWidth","padding","marginTop","height","width","flex","borderWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,SAASC,cAAT;AACA,SAASC,MAAT;AACA,SAASC,UAAT;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,UAAT,EAAqBC,cAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,IAAMC,WAAW,GAAG,CAAC,MAAD,EAAS,UAAT,CAApB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC3B,kBAAwBT,QAAQ,CAAS,EAAT,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,QAAQ,GAAGX,cAAc,EAA/B;;AAEA,MAAMY,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AACfX,YAAAA,MAAM;AACNU,YAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAIAW,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIW,IAAI,KAAK,UAAb,EAAyB;AACxBE,MAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AACA;AACA;;AACD,QAAII,IAAI,KAAK,MAAb,EAAqB;AACpBE,MAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACA;AACA;AACD,GATQ,EASN,CAACK,IAAD,CATM,CAAT;AAUC,SACA,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACM,MAAM,CAACC,SAAR,EAAmBC,GAAnB,CAAb;AAAA,eACC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA,gBAA2B,MAAC,IAAD;AAAA,6BAAaZ,KAAK,GAAGa,MAAR,CAAe,QAAf,CAAb;AAAA;AAA3B,MADD,EAEC,KAAC,aAAD;AACS,MAAA,YAAY,EAAC,SADtB;AAES,MAAA,OAAO,EAAEZ,WAFlB;AAGS,MAAA,QAAQ,EAAE,kBAACa,GAAD,EAAMC,KAAN;AAAA,eAAgBX,OAAO,CAACW,KAAD,CAAvB;AAAA,OAHnB;AAIC,MAAA,KAAK,EAAEN,MAAM,CAACO;AAJf,MAFD,EAQI,KAAC,SAAD;AAAW,MAAA,OAAO,EAAEV,QAApB;AAAA,gBACH,KAAC,IAAD;AAAA;AAAA;AADG,MARJ;AAAA,IADA;AAeD,CAnCM;AAsCP,IAAMG,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCR,EAAAA,SAAS,EAAE;AACTS,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,iBAAiB,EAAE,CALV;AAMTC,IAAAA,OAAO,EAAE,EANA;AAOTC,IAAAA,SAAS,EAAE,EAPF;AAQTC,IAAAA,MAAM,EAAE,EARC;AASTC,IAAAA,KAAK,EAAE;AATE,GADqB;AAYhCf,EAAAA,KAAK,EAAE;AACNgB,IAAAA,IAAI,EAAE;AADA,GAZyB;AAehCZ,EAAAA,SAAS,EAAE;AACVa,IAAAA,WAAW,EAAE;AADH;AAfqB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet,Button, Text, TextInput, View, Pressable } from \"react-native\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { logout } from \"../http/userAPI\";\r\nimport { userLogout } from \"../store/userSlice\";\r\nimport ModalDropdown from 'react-native-modal-dropdown';\r\nimport { sortByDate, sortByPriority } from '../store/todoSlice';\r\nimport dayjs from 'dayjs';\r\n\r\nconst sortOptions = ['Date', 'Priority']\r\n\r\nexport const Header = () => {\r\n\tconst [sort, setSort] = useState<string>('')\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst onLogout = async () => {\r\n\t  logout();\r\n\t  dispatch(userLogout());\r\n\t};\r\n\tconsole.log(sort);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (sort === 'Priority') {\r\n\t\t\tdispatch(sortByPriority())\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (sort === 'Date') {\r\n\t\t\tdispatch(sortByDate())\r\n\t\t\treturn\r\n\t\t}\r\n\t}, [sort])\r\n  return (\r\n\t <View style={[styles.container, glo]}>\r\n\t\t <View style={styles.title}><Text>Today {dayjs().format('DD MMM')}</Text></View>\r\n\t\t <ModalDropdown\r\n            defaultValue=\"Sort by\"\r\n            options={sortOptions}\r\n            onSelect={(idx, value) => setSort(value)}\r\n\t\t\t\tstyle={styles.sortModal}\r\n          />\r\n      <Pressable onPress={onLogout}>\r\n\t\t\t<Text>Logout</Text>\r\n\t\t</Pressable>\r\n\t\t\r\n\t </View>\r\n  )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t  display: \"flex\",\r\n\t  flexDirection: \"row\",\r\n\t  alignItems: \"center\",\r\n\t  borderColor: \"#e4e3e3\",\r\n\t  borderBottomWidth: 1,\r\n\t  padding: 10,\r\n\t  marginTop: 15,\r\n\t  height: 30,\r\n\t  width: \"100%\",\r\n\t},\r\n\ttitle: {\r\n\t\tflex: 1,\r\n\t},\r\n\tsortModal: {\r\n\t\tborderWidth: 1,\r\n\t}\r\n });"]},"metadata":{},"sourceType":"module"}