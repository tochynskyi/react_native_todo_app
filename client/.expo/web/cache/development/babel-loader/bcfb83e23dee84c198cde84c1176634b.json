{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport ListItem from \"./ListItem\";\nimport { deleteTodosDB } from \"../../http/todoAPI\";\nimport { deleteTodo } from \"../../store/todoSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar List = function List() {\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.todo;\n  }),\n      todos = _useAppSelector.todos;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoId = _useState2[0],\n      setTodoId = _useState2[1];\n\n  var dispatch = useAppDispatch();\n\n  var onRightAction = function onRightAction(id) {\n    setTodoId(id);\n  };\n\n  var renderHiddenItem = function renderHiddenItem() {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Background field\"\n      })\n    });\n  };\n\n  useEffect(function () {\n    var onDelete = function onDelete(id) {\n      return _regeneratorRuntime.async(function onDelete$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(deleteTodo(id));\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(deleteTodosDB(id));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    !!todoId && onDelete(todoId);\n  }, [todoId]);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(SwipeListView, {\n      data: todos,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ListItem, {\n          todo: item\n        });\n      },\n      keyExtractor: function keyExtractor(_ref2) {\n        var id = _ref2.id;\n        return id;\n      },\n      renderHiddenItem: renderHiddenItem,\n      useNativeDriver: false,\n      rightActivationValue: -150,\n      rightActionValue: -500,\n      onRightAction: onRightAction,\n      disableRightSwipe: true\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    marginBottom: 15,\n    padding: 10,\n    width: \"100%\"\n  }\n});\nexport default List;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/List/List.tsx"],"names":["React","useEffect","useState","SwipeListView","ListItem","deleteTodosDB","deleteTodo","useAppDispatch","useAppSelector","List","state","todo","todos","todoId","setTodoId","dispatch","onRightAction","id","renderHiddenItem","onDelete","styles","container","item","StyleSheet","create","flex","alignItems","marginBottom","padding","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;;;;AAEA,SAASC,aAAT,QAA8B,8BAA9B;AAEA,OAAOC,QAAP;AACA,SAASC,aAAT;AACA,SAASC,UAAT;AACA,SAASC,cAAT,EAAyBC,cAAzB;;;AAEA,IAAMC,IAAQ,GAAG,SAAXA,IAAW,GAAM;AACrB,wBAAkBD,cAAc,CAAC,UAACE,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAhC;AAAA,MAAQC,KAAR,mBAAQA,KAAR;;AACA,kBAA4BV,QAAQ,CAAS,EAAT,CAApC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,QAAQ,GAAGR,cAAc,EAA/B;;AAEA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAgB;AAEpCH,IAAAA,SAAS,CAACG,EAAD,CAAT;AACD,GAHD;;AAKA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WACvB,KAAC,IAAD;AAAA,gBACE,KAAC,IAAD;AAAA;AAAA;AADF,MADuB;AAAA,GAAzB;;AAKAjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkB,QAAQ,GAAG,SAAXA,QAAW,CAAOF,EAAP;AAAA;AAAA;AAAA;AAAA;AACfF,cAAAA,QAAQ,CAACT,UAAU,CAACW,EAAD,CAAX,CAAR;AADe;AAAA,+CAETZ,aAAa,CAACY,EAAD,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAIA,KAAC,CAACJ,MAAF,IAAYM,QAAQ,CAACN,MAAD,CAApB;AACD,GANQ,EAMN,CAACA,MAAD,CANM,CAAT;AAQA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,aAAD;AACE,MAAA,IAAI,EAAET,KADR;AAEE,MAAA,UAAU,EAAE;AAAA,YAAGU,IAAH,QAAGA,IAAH;AAAA,eAAc,KAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB,UAAd;AAAA,OAFd;AAGE,MAAA,YAAY,EAAE;AAAA,YAAGL,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAZ;AAAA,OAHhB;AAIE,MAAA,gBAAgB,EAAEC,gBAJpB;AAKE,MAAA,eAAe,EAAE,KALnB;AAME,MAAA,oBAAoB,EAAE,CAAC,GANzB;AAOE,MAAA,gBAAgB,EAAE,CAAC,GAPrB;AAQE,MAAA,aAAa,EAAEF,aARjB;AASE,MAAA,iBAAiB;AATnB;AADF,IADF;AAeD,CAtCD;;AAuCA,IAAMI,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,KAAK,EAAE;AALE;AADoB,CAAlB,CAAf;AAWA,eAAepB,IAAf","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { SwipeListView } from \"react-native-swipe-list-view\";\r\n\r\nimport ListItem from \"./ListItem\";\r\nimport { deleteTodosDB } from \"../../http/todoAPI\";\r\nimport { deleteTodo } from \"../../store/todoSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\n\r\nconst List: FC = () => {\r\n  const { todos } = useAppSelector((state) => state.todo);\r\n  const [todoId, setTodoId] = useState<string>(\"\");\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onRightAction = (id: string) => {\r\n    // This fnc return ListItem ID\r\n    setTodoId(id);\r\n  };\r\n\r\n  const renderHiddenItem = () => (\r\n    <View>\r\n      <Text>Background field</Text>\r\n    </View>\r\n  );\r\n  useEffect(() => {\r\n    const onDelete = async (id: string) => {\r\n      dispatch(deleteTodo(id));\r\n      await deleteTodosDB(id);\r\n    };\r\n    !!todoId && onDelete(todoId);\r\n  }, [todoId]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <SwipeListView\r\n        data={todos}\r\n        renderItem={({ item }) => <ListItem todo={item} />}\r\n        keyExtractor={({ id }) => id}\r\n        renderHiddenItem={renderHiddenItem}\r\n        useNativeDriver={false}\r\n        rightActivationValue={-150}\r\n        rightActionValue={-500}\r\n        onRightAction={onRightAction}\r\n        disableRightSwipe\r\n      />\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    marginBottom: 15,\r\n    padding: 10,\r\n    width: \"100%\",\r\n    \r\n  },\r\n});\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}