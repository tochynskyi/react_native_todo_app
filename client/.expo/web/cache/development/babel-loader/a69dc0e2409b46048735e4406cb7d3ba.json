{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useAppDispatch } from \"../store/hooks\";\nimport { logout } from \"../http/userAPI\";\nimport { userLogout } from \"../store/userSlice\";\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { sortByDate, sortByPriority } from \"../store/todoSlice\";\nimport dayjs from 'dayjs';\nimport { globalStyles } from \"../styles/global\";\nimport { Colors } from \"../styles/colors\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar sortOptions = ['Date', 'Priority'];\nexport var Header = function Header() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      sort = _useState2[0],\n      setSort = _useState2[1];\n\n  var dispatch = useAppDispatch();\n\n  var onLogout = function onLogout() {\n    return _regeneratorRuntime.async(function onLogout$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            logout();\n            dispatch(userLogout());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (sort === 'Priority') {\n      dispatch(sortByPriority());\n      return;\n    }\n\n    if (sort === 'Date') {\n      dispatch(sortByDate());\n      return;\n    }\n  }, [sort]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.titleWrapper,\n      children: _jsxs(Text, {\n        style: styles.title,\n        children: [\"Today \", dayjs().format('DD MMM')]\n      })\n    }), _jsx(ModalDropdown, {\n      defaultValue: \"Sort by\",\n      renderButtonText: function renderButtonText() {\n        return 'Sort by';\n      },\n      textStyle: {\n        fontSize: 14,\n        color: Colors.black\n      },\n      options: sortOptions,\n      onSelect: function onSelect(idx, value) {\n        return setSort(value);\n      },\n      style: styles.sortModal\n    }), _jsx(Pressable, {\n      onPress: onLogout,\n      children: _jsx(Text, {\n        style: globalStyles.whiteTxt,\n        children: \"Exit\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderBottomWidth: 1,\n    borderBottomEndRadius: 5,\n    borderBottomStartRadius: 5,\n    borderColor: '#F8F7FF',\n    paddingTop: 25,\n    paddingHorizontal: 15,\n    paddingBottom: 10,\n    width: \"100%\",\n    backgroundColor: Colors.primaryBg\n  },\n  titleWrapper: {\n    flex: 1\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: Colors.white\n  },\n  sortModal: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: '#F8F7FF',\n    marginRight: 15,\n    paddingVertical: 3,\n    paddingHorizontal: 5,\n    backgroundColor: C\n  }\n});","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/Header.tsx"],"names":["React","useEffect","useState","useAppDispatch","logout","userLogout","ModalDropdown","sortByDate","sortByPriority","dayjs","globalStyles","Colors","sortOptions","Header","sort","setSort","dispatch","onLogout","styles","container","titleWrapper","title","format","fontSize","color","black","idx","value","sortModal","whiteTxt","StyleSheet","create","display","flexDirection","alignItems","borderBottomWidth","borderBottomEndRadius","borderBottomStartRadius","borderColor","paddingTop","paddingHorizontal","paddingBottom","width","backgroundColor","primaryBg","flex","fontWeight","white","borderWidth","borderRadius","marginRight","paddingVertical","C"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet,Button, Text, TextInput, View, Pressable } from \"react-native\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { logout } from \"../http/userAPI\";\r\nimport { userLogout } from \"../store/userSlice\";\r\nimport ModalDropdown from 'react-native-modal-dropdown';\r\nimport { sortByDate, sortByPriority } from '../store/todoSlice';\r\nimport dayjs from 'dayjs';\r\nimport { globalStyles } from '../styles/global';\r\nimport { Colors } from '../styles/colors';\r\n\r\nconst sortOptions = ['Date', 'Priority']\r\n\r\nexport const Header = () => {\r\n\tconst [sort, setSort] = useState<string>('')\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst onLogout = async () => {\r\n\t  logout();\r\n\t  dispatch(userLogout());\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (sort === 'Priority') {\r\n\t\t\tdispatch(sortByPriority())\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (sort === 'Date') {\r\n\t\t\tdispatch(sortByDate())\r\n\t\t\treturn\r\n\t\t}\r\n\t}, [sort])\r\n  return (\r\n\t <View style={styles.container}>\r\n\t\t <View style={styles.titleWrapper}><Text style={styles.title}>Today {dayjs().format('DD MMM')}</Text></View>\r\n\t\t <ModalDropdown\r\n            defaultValue=\"Sort by\"\r\n\t\t\t\trenderButtonText={() => 'Sort by'}\r\n\t\t\t\ttextStyle={{fontSize: 14, color: Colors.black}}\r\n            options={sortOptions}\r\n            onSelect={(idx, value) => setSort(value)}\r\n\t\t\t\tstyle={styles.sortModal}\r\n          />\r\n      <Pressable onPress={onLogout}>\r\n\t\t\t<Text style={globalStyles.whiteTxt}>Exit</Text>\r\n\t\t</Pressable>\r\n\t\t\r\n\t </View>\r\n  )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t  display: 'flex',\r\n\t  flexDirection: \"row\",\r\n\t  alignItems: \"center\",\r\n\t  borderBottomWidth: 1,\r\n\t  borderBottomEndRadius: 5,\r\n\t  borderBottomStartRadius: 5,\r\n\t  borderColor: '#F8F7FF',\r\n\t  paddingTop: 25,\r\n\t  paddingHorizontal: 15,\r\n\t  paddingBottom: 10,\r\n\t  width: \"100%\",\r\n\t  backgroundColor: Colors.primaryBg\r\n\t},\r\n\ttitleWrapper: {\r\n\t\tflex: 1,\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 16,\r\n\t\tfontWeight: '500',\r\n\t\tcolor: Colors.white\r\n\t},\r\n\tsortModal: {\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t\tborderColor: '#F8F7FF',\r\n\t\tmarginRight: 15,\r\n\t\tpaddingVertical: 3,\r\n\t\tpaddingHorizontal: 5,\r\n\t\tbackgroundColor: C\r\n\t}\r\n });"]},"metadata":{},"sourceType":"module"}