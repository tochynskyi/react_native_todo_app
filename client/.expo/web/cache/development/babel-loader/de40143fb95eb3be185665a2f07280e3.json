{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItem from \"./ListItem\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport { deleteTodosDB } from \"../../http/todoAPI\";\nimport { deleteTodo } from \"../../store/todoSlice\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar List = function List(_ref) {\n  var todos = _ref.todos;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoId = _useState2[0],\n      setTodoId = _useState2[1];\n\n  var dispatch = useAppDispatch();\n\n  var onRightAction = function onRightAction(id) {\n    setTodoId(id);\n  };\n\n  useEffect(function () {\n    var onDelete = function onDelete(id) {\n      return _regeneratorRuntime.async(function onDelete$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(deleteTodo(id));\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(deleteTodosDB(id));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    onDelete(todoId);\n  }, [todoId]);\n  return _jsx(View, {\n    children: _jsx(SwipeListView, {\n      data: todos,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(ListItem, {\n          todo: item\n        });\n      },\n      keyExtractor: function keyExtractor(_ref3) {\n        var id = _ref3.id;\n        return id;\n      },\n      renderHiddenItem: function renderHiddenItem() {\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Delete\"\n          })\n        });\n      },\n      useNativeDriver: false,\n      rightActivationValue: -150,\n      rightActionValue: -500,\n      onRightAction: onRightAction,\n      disableRightSwipe: true\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#e4e3e3\",\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 15,\n    padding: 10,\n    height: 40,\n    width: \"100%\"\n  }\n});\nexport default List;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/List/List.tsx"],"names":["React","useEffect","useState","ListItem","SwipeListView","deleteTodosDB","deleteTodo","useAppDispatch","List","todos","todoId","setTodoId","dispatch","onRightAction","id","onDelete","item","styles","StyleSheet","create","container","display","flexDirection","alignItems","borderColor","borderWidth","borderRadius","marginBottom","padding","height","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;;;;AAGA,OAAOC,QAAP;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAAuBC,aAAvB;AACA,SAAoBC,UAApB;AACA,SAASC,cAAT;;;AAMA,IAAMC,IAAmB,GAAG,SAAtBA,IAAsB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AACzC,kBAA4BP,QAAQ,CAAS,EAAT,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;;AAEA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAgB;AACpCH,IAAAA,SAAS,CAACG,EAAD,CAAT;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,QAAQ,GAAG,SAAXA,QAAW,CAAOD,EAAP;AAAA;AAAA;AAAA;AAAA;AACfF,cAAAA,QAAQ,CAACN,UAAU,CAACQ,EAAD,CAAX,CAAR;AADe;AAAA,+CAETT,aAAa,CAACS,EAAD,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAIAC,IAAAA,QAAQ,CAACL,MAAD,CAAR;AACD,GANQ,EAMN,CAACA,MAAD,CANM,CAAT;AAQA,SACE,KAAC,IAAD;AAAA,cACE,KAAC,aAAD;AACE,MAAA,IAAI,EAAED,KADR;AAEE,MAAA,UAAU,EAAE;AAAA,YAAGO,IAAH,SAAGA,IAAH;AAAA,eAAc,KAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB,UAAd;AAAA,OAFd;AAGE,MAAA,YAAY,EAAE;AAAA,YAAGF,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAZ;AAAA,OAHhB;AAIE,MAAA,gBAAgB,EAAE;AAAA,eAChB,KAAC,IAAD;AAAA,oBACE,KAAC,IAAD;AAAA;AAAA;AADF,UADgB;AAAA,OAJpB;AASE,MAAA,eAAe,EAAE,KATnB;AAUE,MAAA,oBAAoB,EAAE,CAAC,GAVzB;AAWF,MAAA,gBAAgB,EAAE,CAAC,GAXjB;AAYE,MAAA,aAAa,EAAED,aAZjB;AAaF,MAAA,iBAAiB;AAbf;AADF,IADF;AAmBD,CAnCD;;AAoCA,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,WAAW,EAAE,CALJ;AAMTC,IAAAA,YAAY,EAAE,EANL;AAOTC,IAAAA,YAAY,EAAE,EAPL;AAQTC,IAAAA,OAAO,EAAE,EARA;AASTC,IAAAA,MAAM,EAAE,EATC;AAUTC,IAAAA,KAAK,EAAE;AAVE;AADqB,CAAlB,CAAf;AAgBA,eAAetB,IAAf","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\nimport { FlatList, StyleSheet, Text, TextInput, View } from \"react-native\";\r\nimport { ITodo } from \"../../interfaces/ITodo\";\r\nimport ListItem from \"./ListItem\";\r\nimport { SwipeListView } from \"react-native-swipe-list-view\";\r\nimport { checkTodosDB, deleteTodosDB } from \"../../http/todoAPI\";\r\nimport { checkTodo, deleteTodo } from \"../../store/todoSlice\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\n\r\ninterface ListProps {\r\n  todos: ITodo[];\r\n}\r\n\r\nconst List: FC<ListProps> = ({ todos }) => {\r\n  const [todoId, setTodoId] = useState<string>(\"\");\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onRightAction = (id: string) => {\r\n    setTodoId(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onDelete = async (id: string) => {\r\n      dispatch(deleteTodo(id));\r\n      await deleteTodosDB(id);\r\n    };\r\n    onDelete(todoId);\r\n  }, [todoId]);\r\n\r\n  return (\r\n    <View>\r\n      <SwipeListView\r\n        data={todos}\r\n        renderItem={({ item }) => <ListItem todo={item} />}\r\n        keyExtractor={({ id }) => id}\r\n        renderHiddenItem={() => (\r\n          <View>\r\n            <Text>Delete</Text>\r\n          </View>\r\n        )}\r\n        useNativeDriver={false}\r\n        rightActivationValue={-150}\r\n\t\t  rightActionValue={-500}\r\n        onRightAction={onRightAction}\r\n\t\t  disableRightSwipe\r\n      />\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t  display: \"flex\",\r\n\t  flexDirection: \"row\",\r\n\t  alignItems: \"center\",\r\n\t  borderColor: \"#e4e3e3\",\r\n\t  borderWidth: 1,\r\n\t  borderRadius: 10,\r\n\t  marginBottom: 15,\r\n\t  padding: 10,\r\n\t  height: 40,\r\n\t  width: \"100%\",\r\n\t},\r\n\r\n });\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}