{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  loadingTodos: false,\n  todos: [],\n  error: \"\"\n};\nvar todoSlice = createSlice({\n  name: \"todo\",\n  initialState: initialState,\n  reducers: {\n    fetchTodos: function fetchTodos(state) {\n      state.loading = true;\n    },\n    fetchTodosSuccess: function fetchTodosSuccess(state, action) {\n      state.loading = false;\n      state.todos = action.payload;\n    },\n    fetchError: function fetchError(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    addTodo: function addTodo(state, action) {\n      state.loading = true;\n    },\n    deleteTodo: function deleteTodo(state, action) {\n      state.loading = true;\n    }\n  }\n});\nvar _todoSlice$actions = todoSlice.actions,\n    fetchTodos = _todoSlice$actions.fetchTodos,\n    fetchTodosSuccess = _todoSlice$actions.fetchTodosSuccess,\n    fetchError = _todoSlice$actions.fetchError,\n    addTodo = _todoSlice$actions.addTodo,\n    deleteTodo = _todoSlice$actions.deleteTodo;\nexport { fetchTodos, fetchTodosSuccess, fetchError, addTodo, deleteTodo };\nexport default todoSlice.reducer;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/store/todoSlice.ts"],"names":["createSlice","initialState","loadingTodos","todos","error","todoSlice","name","reducers","fetchTodos","state","loading","fetchTodosSuccess","action","payload","fetchError","addTodo","deleteTodo","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AASA,IAAMC,YAAuB,GAAG;AAC9BC,EAAAA,YAAY,EAAE,KADgB;AAE9BC,EAAAA,KAAK,EAAE,EAFuB;AAG9BC,EAAAA,KAAK,EAAE;AAHuB,CAAhC;AAMA,IAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAAY,EAAZA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UADQ,sBACGC,KADH,EACU;AAChBA,MAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACD,KAHO;AAIRC,IAAAA,iBAJQ,6BAIUF,KAJV,EAIiBG,MAJjB,EAIiD;AACvDH,MAAAA,KAAK,CAACC,OAAN,GAAgB,KAAhB;AACJD,MAAAA,KAAK,CAACN,KAAN,GAAcS,MAAM,CAACC,OAArB;AACG,KAPO;AAQVC,IAAAA,UARU,sBAQEL,KARF,EAQSG,MART,EAQwC;AAClDH,MAAAA,KAAK,CAACC,OAAN,GAAgB,KAAhB;AACAD,MAAAA,KAAK,CAACL,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACC,KAXS;AAYRE,IAAAA,OAZQ,mBAYAN,KAZA,EAYOG,MAZP,EAYqC;AAC3CH,MAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACD,KAdO;AAeRM,IAAAA,UAfQ,sBAeGP,KAfH,EAeUG,MAfV,EAewC;AAC9CH,MAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACD;AAjBO;AAHkB,CAAD,CAA7B;AAwBO,yBAAyEL,SAAS,CAACY,OAAnF;AAAA,IAAOT,UAAP,sBAAOA,UAAP;AAAA,IAAmBG,iBAAnB,sBAAmBA,iBAAnB;AAAA,IAAsCG,UAAtC,sBAAsCA,UAAtC;AAAA,IAAkDC,OAAlD,sBAAkDA,OAAlD;AAAA,IAA2DC,UAA3D,sBAA2DA,UAA3D;;AACP,eAAeX,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { ITodo } from \"../interfaces/ITodo\";\r\n\r\ninterface TodoState {\r\n  loading: boolean;\r\n  todos: ITodo[];\r\n  error: string;\r\n}\r\n\r\nconst initialState: TodoState = {\r\n  loadingTodos: false,\r\n  todos: [],\r\n  error: \"\",\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState,\r\n  reducers: {\r\n    fetchTodos(state) {\r\n      state.loading = true;\r\n    },\r\n    fetchTodosSuccess(state, action: PayloadAction<ITodo[]>) {\r\n      state.loading = false;\r\n\t\tstate.todos = action.payload\r\n    },\r\n\t fetchError (state, action: PayloadAction<string>) {\r\n\t\tstate.loading = false;\r\n\t\tstate.error = action.payload\r\n\t },\r\n    addTodo(state, action: PayloadAction<ITodo>) {\r\n      state.loading = true;\r\n    },\r\n    deleteTodo(state, action: PayloadAction<ITodo>) {\r\n      state.loading = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {fetchTodos, fetchTodosSuccess, fetchError, addTodo, deleteTodo} = todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}