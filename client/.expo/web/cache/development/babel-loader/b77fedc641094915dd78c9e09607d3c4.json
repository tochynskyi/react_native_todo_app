{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { authInstance } from \"./index\";\nimport { fetchTodoError, fetchTodos, fetchTodosSuccess, addTodo } from \"../store/todoSlice\";\nexport var getTodos = function getTodos(author) {\n  return function _callee(dispatch) {\n    var _await$authInstance$g, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch(fetchTodos());\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(authInstance.get(\"/api/todos/getTodos/\" + author));\n\n          case 4:\n            _await$authInstance$g = _context.sent;\n            data = _await$authInstance$g.data;\n            dispatch(fetchTodosSuccess(data));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch(fetchTodoError(_context.t0));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};\nexport var addTodos = function addTodos(todo) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            try {\n              dispatch(addTodo(todo));\n              console.log('');\n            } catch (e) {\n              dispatch(fetchTodoError(e));\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/http/todoAPI.ts"],"names":["authInstance","fetchTodoError","fetchTodos","fetchTodosSuccess","addTodo","getTodos","author","dispatch","get","data","addTodos","todo","console","log","e"],"mappings":";AAAA,SAASA,YAAT;AAEA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,iBAArC,EAAwDC,OAAxD;AAGA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAoB;AAC1C,SAAO,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,YAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AAFG;AAAA,6CAGoBF,YAAY,CAACQ,GAAb,0BACEF,MADF,CAHpB;;AAAA;AAAA;AAGKG,YAAAA,IAHL,yBAGKA,IAHL;AAMHF,YAAAA,QAAQ,CAACJ,iBAAiB,CAACM,IAAD,CAAlB,CAAR;AANG;AAAA;;AAAA;AAAA;AAAA;AAQHF,YAAAA,QAAQ,CAACN,cAAc,aAAf,CAAR;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAWD,CAZM;AAcP,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAiB;AACxC,SAAO,kBAAOJ,QAAP;AAAA;AAAA;AAAA;AAAA;AACL,gBAAI;AACJA,cAAAA,QAAQ,CAACH,OAAO,CAACO,IAAD,CAAR,CAAR;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AAQC,aAVD,CAUE,OAAOC,CAAP,EAAe;AACjBP,cAAAA,QAAQ,CAACN,cAAc,CAACa,CAAD,CAAf,CAAR;AACC;;AAbI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAeC,CAhBK","sourcesContent":["import { authInstance } from \"./index\";\r\nimport { AppDispatch } from \"../store/store\";\r\nimport { fetchTodoError, fetchTodos, fetchTodosSuccess, addTodo } from \"../store/todoSlice\";\r\nimport { ITodo } from \"../interfaces/ITodo\";\r\n\r\nexport const getTodos = (author: string) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(fetchTodos());\r\n      const { data } = await authInstance.get<ITodo[]>(\r\n        `/api/todos/getTodos/${author}`\r\n      );\r\n      dispatch(fetchTodosSuccess(data));\r\n    } catch (e: any) {\r\n      dispatch(fetchTodoError(e));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addTodos = (todo: ITodo) => {\r\n\treturn async (dispatch: AppDispatch) => {\r\n\t  try {\r\n\t\t dispatch(addTodo(todo));\r\n\t\t console.log('');\r\n\t\t \r\n\t\t//  const response = await authInstance.post<ITodo>(\r\n\t\t// \t`/api/todos/addTodo`, {\r\n\t\t// \t\ttodo\r\n\t\t// \t}\r\n\t\t//  );\r\n\t\t//  console.log(response);\t \r\n\t  } catch (e: any) {\r\n\t\t dispatch(fetchTodoError(e));\r\n\t  }\r\n\t};\r\n };\r\n"]},"metadata":{},"sourceType":"module"}