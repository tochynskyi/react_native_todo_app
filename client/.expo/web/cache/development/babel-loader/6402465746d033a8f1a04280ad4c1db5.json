{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Header } from \"../components/Header\";\nimport List from \"../components/List/List\";\nimport TodoForm from \"../components/Form/TodoForm\";\nimport { getTodosDB } from \"../http/todoAPI\";\nimport { fetchTodoError, fetchTodos, fetchTodosSuccess } from \"../store/todoSlice\";\nimport { Colors } from \"../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Todo = function Todo() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.user;\n  }),\n      loading = _useAppSelector.loading,\n      user = _useAppSelector.user,\n      userError = _useAppSelector.userError;\n\n  var _useAppSelector2 = useAppSelector(function (state) {\n    return state.todo;\n  }),\n      loadingTodos = _useAppSelector2.loadingTodos,\n      todos = _useAppSelector2.todos,\n      todoError = _useAppSelector2.todoError;\n\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    var getTodosFromDB = function getTodosFromDB() {\n      var _todos;\n\n      return _regeneratorRuntime.async(function getTodosFromDB$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (!user) {\n                _context.next = 7;\n                break;\n              }\n\n              dispatch(fetchTodos());\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getTodosDB(user));\n\n            case 5:\n              _todos = _context.sent;\n              dispatch(fetchTodosSuccess(_todos));\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.response.data.message);\n              dispatch(fetchTodoError(_context.t0));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    getTodosFromDB();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {}), !!todoError && _jsx(Text, {\n      children: todoError\n    }), !!userError && _jsx(Text, {\n      children: userError\n    }), !!loading || !!loadingTodos && _jsx(Text, {\n      children: \"Loading...\"\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"What do you do today?\"\n    }), _jsx(List, {}), _jsx(TodoForm, {})]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    paddingBottom: 10,\n    backgroundColor: Colors.background\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"500\",\n    color: Colors.black,\n    marginBottom: 10\n  }\n});\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/pages/Todo.tsx"],"names":["React","useEffect","useAppDispatch","useAppSelector","Header","List","TodoForm","getTodosDB","fetchTodoError","fetchTodos","fetchTodosSuccess","Colors","Todo","useState","isOpen","setIsOpen","state","user","loading","userError","todo","loadingTodos","todos","todoError","dispatch","getTodosFromDB","console","log","response","data","message","styles","container","title","StyleSheet","create","flex","alignItems","paddingBottom","backgroundColor","background","fontSize","fontWeight","color","black","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,cAAzB;;;;AAEA,SAASC,MAAT;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,SAASC,UAAT;AACA,SACEC,cADF,EAEEC,UAFF,EAGEC,iBAHF;AAKA,SAASC,MAAT;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAClB,kBAA4BC,QAAQ,CAAU,KAAV,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACC,wBAAqCZ,cAAc,CAAC,UAACa,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAnD;AAAA,MAAQC,OAAR,mBAAQA,OAAR;AAAA,MAAiBD,IAAjB,mBAAiBA,IAAjB;AAAA,MAAuBE,SAAvB,mBAAuBA,SAAvB;;AACA,yBAA2ChB,cAAc,CACvD,UAACa,KAAD;AAAA,WAAWA,KAAK,CAACI,IAAjB;AAAA,GADuD,CAAzD;AAAA,MAAQC,YAAR,oBAAQA,YAAR;AAAA,MAAsBC,KAAtB,oBAAsBA,KAAtB;AAAA,MAA6BC,SAA7B,oBAA6BA,SAA7B;;AAGA,MAAMC,QAAQ,GAAGtB,cAAc,EAA/B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMwB,cAAc,GAAG,SAAjBA,cAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAEd,CAACR,IAFa;AAAA;AAAA;AAAA;;AAGjBO,cAAAA,QAAQ,CAACf,UAAU,EAAX,CAAR;AAHiB;AAAA,+CAIGF,UAAU,CAACU,IAAD,CAJb;;AAAA;AAIXK,cAAAA,MAJW;AAKjBE,cAAAA,QAAQ,CAACd,iBAAiB,CAACY,MAAD,CAAlB,CAAR;;AALiB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQnBI,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAEC,QAAF,CAAWC,IAAX,CAAgBC,OAA5B;AACAN,cAAAA,QAAQ,CAAChB,cAAc,aAAf,CAAR;;AATmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AAYAiB,IAAAA,cAAc;AACf,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,MAAD,KADF,EAEG,CAAC,CAACT,SAAF,IAAe,KAAC,IAAD;AAAA,gBAAOA;AAAP,MAFlB,EAGG,CAAC,CAACJ,SAAF,IAAe,KAAC,IAAD;AAAA,gBAAOA;AAAP,MAHlB,EAIG,CAAC,CAACD,OAAF,IAAc,CAAC,CAACG,YAAF,IAAkB,KAAC,IAAD;AAAA;AAAA,MAJnC,EAKE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEU,MAAM,CAACE,KAApB;AAAA;AAAA,MALF,EAME,KAAC,IAAD,KANF,EAOE,KAAC,QAAD,KAPF;AAAA,IADF;AAWD,CAnCD;;AAqCA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,aAAa,EAAE,EAHN;AAITC,IAAAA,eAAe,EAAE5B,MAAM,CAAC6B;AAJf,GADoB;AAO/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLC,IAAAA,KAAK,EAAEhC,MAAM,CAACiC,KAHT;AAILC,IAAAA,YAAY,EAAE;AAJT;AAPwB,CAAlB,CAAf;AAcA,eAAejC,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { View, StyleSheet, Text } from \"react-native\";\r\nimport { Header } from \"../components/Header\";\r\nimport List from \"../components/List/List\";\r\nimport TodoForm from \"../components/Form/TodoForm\";\r\nimport { getTodosDB } from \"../http/todoAPI\";\r\nimport {\r\n  fetchTodoError,\r\n  fetchTodos,\r\n  fetchTodosSuccess,\r\n} from \"../store/todoSlice\";\r\nimport { Colors } from \"../styles/colors\";\r\n\r\nconst Todo = () => {\r\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const { loading, user, userError } = useAppSelector((state) => state.user);\r\n  const { loadingTodos, todos, todoError } = useAppSelector(\r\n    (state) => state.todo\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const getTodosFromDB = async () => {\r\n      try {\r\n        if (!!user) {\r\n          dispatch(fetchTodos());\r\n          const todos = await getTodosDB(user);\r\n          dispatch(fetchTodosSuccess(todos));\r\n        }\r\n      } catch (e: any) {\r\n        console.log(e.response.data.message);\r\n        dispatch(fetchTodoError(e));\r\n      }\r\n    };\r\n    getTodosFromDB();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header />\r\n      {!!todoError && <Text>{todoError}</Text>}\r\n      {!!userError && <Text>{userError}</Text>}\r\n      {!!loading || (!!loadingTodos && <Text>Loading...</Text>)}\r\n      <Text style={styles.title}>What do you do today?</Text>\r\n      <List />\r\n      <TodoForm />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    paddingBottom: 10,\r\n    backgroundColor: Colors.background,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"500\",\r\n    color: Colors.black,\r\n    marginBottom: 10,\r\n  },\r\n});\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}