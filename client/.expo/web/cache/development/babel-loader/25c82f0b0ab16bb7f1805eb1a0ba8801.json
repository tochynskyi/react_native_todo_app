{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { check } from \"../http/userAPI\";\nimport { useEffect } from \"react\";\nimport { fetchUserError, userLogin, userLoginSuccess } from \"../store/userSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Main = function Main() {\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.user;\n  }),\n      isAuth = _useAppSelector.isAuth;\n\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    var checkAuth = function checkAuth() {\n      var user;\n      return _regeneratorRuntime.async(function checkAuth$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch(userLogin());\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(check());\n\n            case 4:\n              user = _context.sent;\n              dispatch(userLoginSuccess(user));\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.response.data.message);\n              dispatch(fetchUserError(_context.t0.response.data.message));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    checkAuth();\n  }, []);\n  return _jsx(View, {});\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default Main;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/pages/Main.tsx"],"names":["useAppDispatch","useAppSelector","check","useEffect","fetchUserError","userLogin","userLoginSuccess","Main","state","user","isAuth","dispatch","checkAuth","console","log","response","data","message","styles","StyleSheet","create","container","flex"],"mappings":";;;AAGA,SAASA,cAAT,EAAyBC,cAAzB;AAEA,SAASC,KAAT;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SACEC,cADF,EAEEC,SAFF,EAGEC,gBAHF;;;AAQA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,wBAAmBN,cAAc,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQC,MAAR,mBAAQA,MAAR;;AACA,MAAMC,QAAQ,GAAGX,cAAc,EAA/B;AAEAG,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdD,cAAAA,QAAQ,CAACN,SAAS,EAAV,CAAR;AAFc;AAAA,+CAGKH,KAAK,EAHV;;AAAA;AAGRO,cAAAA,IAHQ;AAIdE,cAAAA,QAAQ,CAACL,gBAAgB,CAACG,IAAD,CAAjB,CAAR;AAJc;AAAA;;AAAA;AAAA;AAAA;AAMdI,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAEC,QAAF,CAAWC,IAAX,CAAgBC,OAA5B;AACAN,cAAAA,QAAQ,CAACP,cAAc,CAAC,YAAEW,QAAF,CAAWC,IAAX,CAAgBC,OAAjB,CAAf,CAAR;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAUAL,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;AAcA,SACD,KAAC,IAAD,KADC;AAID,CAtBD;;AAwBA,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf;AAMA,eAAef,IAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport Auth from \"./Auth\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport Todo from \"./Todo\";\r\nimport { check } from \"../http/userAPI\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  fetchUserError,\r\n  userLogin,\r\n  userLoginSuccess,\r\n} from \"../store/userSlice\";\r\nimport { globalStyles } from \"../styles/global\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\nconst Main = () => {\r\n  const { isAuth } = useAppSelector((state) => state.user);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        dispatch(userLogin());\r\n        const user = await check();\r\n        dispatch(userLoginSuccess(user));\r\n      } catch (e: any) {\r\n        console.log(e.response.data.message);\r\n        dispatch(fetchUserError(e.response.data.message));\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return (\r\n\t<View></View>\r\n        \r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}