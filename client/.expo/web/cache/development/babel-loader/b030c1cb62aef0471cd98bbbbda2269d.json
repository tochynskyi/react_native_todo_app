{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport dayjs from \"dayjs\";\nimport { useState } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Entypo, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport ModalDropdown from \"react-native-modal-dropdown\";\nimport { addTodosDB } from \"../../http/todoAPI\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { addTodo, fetchTodoError } from \"../../store/todoSlice\";\nimport RowOptions from \"./RowOptions\";\nimport { Colors } from \"../../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar todoPriority = [{\n  title: \"High\",\n  number: 1\n}, {\n  title: \"Middle\",\n  number: 2\n}, {\n  title: \"Low\",\n  number: 3\n}, {\n  title: \"None\",\n  number: 4\n}];\n\nvar TodoForm = function TodoForm(_ref) {\n  var isOpen = _ref.isOpen,\n      setIsOpen = _ref.setIsOpen;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(todoPriority[3].number),\n      _useState4 = _slicedToArray(_useState3, 2),\n      priority = _useState4[0],\n      setPriority = _useState4[1];\n\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.user;\n  }),\n      user = _useAppSelector.user;\n\n  var dispatch = useAppDispatch();\n\n  var createTodo = function createTodo() {\n    var newTodo;\n    return _regeneratorRuntime.async(function createTodo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(value && user)) {\n              _context.next = 8;\n              break;\n            }\n\n            newTodo = {\n              id: Date.now().toString(),\n              author: user.id,\n              checked: false,\n              title: value,\n              priority: priority,\n              addDate: dayjs().format()\n            };\n            dispatch(addTodo(newTodo));\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(addTodosDB(newTodo));\n\n          case 6:\n            setValue(\"\");\n            return _context.abrupt(\"return\");\n\n          case 8:\n            return _context.abrupt(\"return\", console.log(\"Todo must have title\"));\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch(fetchTodoError(_context.t0));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  console.log(isOpen);\n  return _jsx(Pressable, {\n    style: [isOpen && styles.open, styles.formOpen],\n    onPress: function onPress() {\n      return setIsOpen(false);\n    },\n    children: _jsxs(View, {\n      style: styles.formOpenContent,\n      children: [_jsx(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return setValue(text);\n        },\n        value: value,\n        placeholder: \"Enter you task...\",\n        style: styles.input\n      }), _jsx(ModalDropdown, {\n        options: todoPriority.map(function (_ref2) {\n          var title = _ref2.title;\n          return title;\n        }),\n        renderRow: RowOptions,\n        renderSeparator: function renderSeparator() {\n          return false;\n        },\n        onSelect: function onSelect(idx) {\n          return setPriority(+idx + 1);\n        },\n        style: [styles.modalBtn, priority === todoPriority[0].number && {\n          backgroundColor: Colors.red\n        }, priority === todoPriority[1].number && {\n          backgroundColor: Colors.yellow\n        }, priority === todoPriority[2].number && {\n          backgroundColor: Colors.green\n        }, priority === todoPriority[3].number && {\n          backgroundColor: Colors.blue\n        }],\n        dropdownStyle: styles.dropdownList,\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"priority-high\",\n          size: 24,\n          color: \"black\"\n        })\n      }), _jsx(Pressable, {\n        style: styles.addBtn,\n        onPress: createTodo,\n        children: _jsx(Entypo, {\n          name: \"add-to-list\",\n          size: 24,\n          color: Colors.white\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  formOpen: {\n    backgroundColor: Colors.black,\n    height: \"100%\",\n    width: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    display: 'none'\n  },\n  open: {},\n  formOpenContent: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 10,\n    marginBottom: 15\n  },\n  input: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: Colors.white,\n    borderRadius: 15,\n    height: 60,\n    marginRight: 5,\n    maxWidth: 500,\n    fontSize: 18\n  },\n  modalBtn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 60,\n    width: 60,\n    borderWidth: 1,\n    borderRadius: 15,\n    marginRight: 5\n  },\n  dropdownList: {\n    position: \"relative\",\n    bottom: 0,\n    left: 0,\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: Colors.background,\n    paddingHorizontal: 40\n  },\n  addBtn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 60,\n    width: 60,\n    borderRadius: 15,\n    backgroundColor: Colors.primaryBg\n  }\n});\nexport default TodoForm;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/Form/TodoForm.tsx"],"names":["dayjs","useState","Entypo","MaterialCommunityIcons","ModalDropdown","addTodosDB","useAppDispatch","useAppSelector","addTodo","fetchTodoError","RowOptions","Colors","todoPriority","title","number","TodoForm","isOpen","setIsOpen","value","setValue","priority","setPriority","state","user","dispatch","createTodo","newTodo","id","Date","now","toString","author","checked","addDate","format","console","log","styles","open","formOpen","formOpenContent","text","input","map","idx","modalBtn","backgroundColor","red","yellow","green","blue","dropdownList","addBtn","white","StyleSheet","create","black","height","width","position","top","left","flex","alignItems","justifyContent","display","flexDirection","paddingHorizontal","marginBottom","padding","borderRadius","marginRight","maxWidth","fontSize","borderWidth","bottom","background","primaryBg"],"mappings":"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","sourcesContent":["import dayjs from \"dayjs\";\r\nimport { Dispatch, FC, SetStateAction, useState } from \"react\";\r\nimport { Pressable, StyleSheet, TextInput, View } from \"react-native\";\r\nimport { Ionicons, Entypo, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport ModalDropdown from \"react-native-modal-dropdown\";\r\nimport { addTodosDB } from \"../../http/todoAPI\";\r\nimport { ITodo } from \"../../interfaces/ITodo\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport { addTodo, fetchTodoError } from \"../../store/todoSlice\";\r\nimport RowOptions from \"./RowOptions\";\r\nimport { Colors } from \"../../styles/colors\";\r\n\r\nconst todoPriority = [\r\n  { title: \"High\", number: 1 },\r\n  { title: \"Middle\", number: 2 },\r\n  { title: \"Low\", number: 3 },\r\n  { title: \"None\", number: 4 },\r\n];\r\n\r\ninterface TodoFormProps {\r\n  isOpen: boolean;\r\n  setIsOpen: Dispatch<SetStateAction<boolean>>;\r\n}\r\nconst TodoForm: FC<TodoFormProps> = ({ isOpen, setIsOpen }) => {\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const [priority, setPriority] = useState<number>(todoPriority[3].number);\r\n  const { user } = useAppSelector((state) => state.user);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const createTodo = async () => {\r\n    try {\r\n      if (value && user) {\r\n        const newTodo: ITodo = {\r\n          id: Date.now().toString(),\r\n          author: user.id,\r\n          checked: false,\r\n          title: value,\r\n          priority: priority,\r\n          addDate: dayjs().format(),\r\n        };\r\n        dispatch(addTodo(newTodo));\r\n        await addTodosDB(newTodo);\r\n        setValue(\"\");\r\n        return;\r\n      }\r\n      return console.log(\"Todo must have title\");\r\n    } catch (error: any) {\r\n      dispatch(fetchTodoError(error));\r\n    }\r\n  };\r\n\r\n  console.log(isOpen);\r\n\r\n\r\n  return (\r\n    <Pressable style={[isOpen && styles.open, styles.formOpen]} onPress={() => setIsOpen(false)}>\r\n      <View style={styles.formOpenContent}>\r\n        <TextInput\r\n          onChangeText={(text) => setValue(text)}\r\n          value={value}\r\n          placeholder={\"Enter you task...\"}\r\n          style={styles.input}\r\n        />\r\n        <ModalDropdown\r\n          options={todoPriority.map(({ title }) => title)}\r\n          renderRow={RowOptions}\r\n          renderSeparator={() => false}\r\n          onSelect={(idx) => setPriority(+idx + 1)}\r\n          style={[\r\n            styles.modalBtn,\r\n            priority === todoPriority[0].number && {\r\n              backgroundColor: Colors.red,\r\n            },\r\n            priority === todoPriority[1].number && {\r\n              backgroundColor: Colors.yellow,\r\n            },\r\n            priority === todoPriority[2].number && {\r\n              backgroundColor: Colors.green,\r\n            },\r\n            priority === todoPriority[3].number && {\r\n              backgroundColor: Colors.blue,\r\n            },\r\n          ]}\r\n          dropdownStyle={styles.dropdownList}\r\n        >\r\n          <MaterialCommunityIcons\r\n            name=\"priority-high\"\r\n            size={24}\r\n            color=\"black\"\r\n          />\r\n        </ModalDropdown>\r\n        <Pressable style={styles.addBtn} onPress={createTodo}>\r\n          <Entypo name=\"add-to-list\" size={24} color={Colors.white} />\r\n        </Pressable>\r\n      </View>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  formOpen: {\r\n    backgroundColor: Colors.black,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n\t display: 'none'\r\n  },\r\n  open: {  \r\n\r\n  },\r\n  formOpenContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 10,\r\n    marginBottom: 15,\r\n  },\r\n\r\n  input: {\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: Colors.white,\r\n    borderRadius: 15,\r\n    height: 60,\r\n    marginRight: 5,\r\n    maxWidth: 500,\r\n    fontSize: 18,\r\n  },\r\n  modalBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 60,\r\n    width: 60,\r\n    borderWidth: 1,\r\n    borderRadius: 15,\r\n    marginRight: 5,\r\n  },\r\n\r\n  dropdownList: {\r\n    position: \"relative\",\r\n    bottom: 0,\r\n    left: 0,\r\n    flex: 1,\r\n    width: \"100%\",\r\n    backgroundColor: Colors.background,\r\n    paddingHorizontal: 40,\r\n  },\r\n\r\n  addBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 60,\r\n    width: 60,\r\n    borderRadius: 15,\r\n    backgroundColor: Colors.primaryBg,\r\n  },\r\n});\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}