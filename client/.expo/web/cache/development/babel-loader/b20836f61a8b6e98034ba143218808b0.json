{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { instance, authInstance } from \"./index\";\nimport jwtDecode from \"jwt-decode\";\nexport var registration = function registration(username, password) {\n  var _await$instance$post, data;\n\n  return _regeneratorRuntime.async(function registration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(instance.post(\"/api/user/registration\", {\n            username: username,\n            password: password\n          }));\n\n        case 2:\n          _await$instance$post = _context.sent;\n          data = _await$instance$post.data;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", data.token));\n\n        case 6:\n          return _context.abrupt(\"return\", jwtDecode(data.token));\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var login = function login(username, password) {\n  var _await$instance$post2, data;\n\n  return _regeneratorRuntime.async(function login$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(instance.post(\"/api/user/login\", {\n            username: username,\n            password: password\n          }));\n\n        case 2:\n          _await$instance$post2 = _context2.sent;\n          data = _await$instance$post2.data;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", data.token));\n\n        case 6:\n          return _context2.abrupt(\"return\", jwtDecode(data.token));\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var logout = function logout() {\n  return _regeneratorRuntime.async(function logout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"token\"));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var check = function check() {\n  var _await$authInstance$g, data;\n\n  return _regeneratorRuntime.async(function check$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(authInstance.get(\"/api/user/auth\"));\n\n        case 2:\n          _await$authInstance$g = _context4.sent;\n          data = _await$authInstance$g.data;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", data.token));\n\n        case 6:\n          return _context4.abrupt(\"return\", jwtDecode(data.token));\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/http/userAPI.ts"],"names":["AsyncStorage","instance","authInstance","jwtDecode","registration","username","password","post","data","setItem","token","login","logout","removeItem","check","get"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAC1BC,QAD0B,EAE1BC,QAF0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIDL,QAAQ,CAACM,IAAT,CAAc,wBAAd,EAAwC;AAC7DF,YAAAA,QAAQ,EAARA,QAD6D;AAE7DC,YAAAA,QAAQ,EAARA;AAF6D,WAAxC,CAJC;;AAAA;AAAA;AAIhBE,UAAAA,IAJgB,wBAIhBA,IAJgB;AAAA;AAAA,2CAQlBR,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC,CARkB;;AAAA;AAAA,2CASjBP,SAAS,CAACK,IAAI,CAACE,KAAN,CATQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAYP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CACnBN,QADmB,EAEnBC,QAFmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKML,QAAQ,CAACM,IAAT,CAAc,iBAAd,EAAiC;AACtDF,YAAAA,QAAQ,EAARA,QADsD;AAEtDC,YAAAA,QAAQ,EAARA;AAFsD,WAAjC,CALN;;AAAA;AAAA;AAKTE,UAAAA,IALS,yBAKTA,IALS;AAAA;AAAA,2CASXR,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC,CATW;;AAAA;AAAA,4CAUVP,SAAS,CAACK,IAAI,CAACE,KAAN,CAVC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AAcP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACdZ,YAAY,CAACa,UAAb,CAAwB,OAAxB,CADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;AAIP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEMZ,YAAY,CAACa,GAAb,CAAiB,gBAAjB,CAFN;;AAAA;AAAA;AAETP,UAAAA,IAFS,yBAETA,IAFS;AAAA;AAAA,2CAGXR,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC,CAHW;;AAAA;AAAA,4CAIVP,SAAS,CAACK,IAAI,CAACE,KAAN,CAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { instance, authInstance } from \"./index\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n\r\nexport const registration = async (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n    const { data } = await instance.post(\"/api/user/registration\", {\r\n      username,\r\n      password,\r\n    });\r\n    await AsyncStorage.setItem(\"token\", data.token);\r\n    return jwtDecode(data.token);\r\n};\r\n\r\nexport const login = async (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n \r\n    const { data } = await instance.post(\"/api/user/login\", {\r\n      username,\r\n      password,\r\n    });\r\n    await AsyncStorage.setItem(\"token\", data.token);\r\n    return jwtDecode(data.token);\r\n  \r\n};\r\n\r\nexport const logout = async () => {\r\n  await AsyncStorage.removeItem(\"token\");\r\n};\r\n\r\nexport const check = async () => {\r\n \r\n    const { data } = await authInstance.get(\"/api/user/auth\");\r\n    await AsyncStorage.setItem(\"token\", data.token);\r\n    return jwtDecode(data.token);\r\n  \r\n};\r\n"]},"metadata":{},"sourceType":"module"}