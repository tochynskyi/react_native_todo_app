{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Auth from \"./Auth\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport Todo from \"./Todo\";\nimport { check } from \"../http/userAPI\";\nimport { useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Main = function Main() {\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.user;\n  }),\n      isAuth = _useAppSelector.isAuth;\n\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    var checkUser = function checkUser() {\n      return _regeneratorRuntime.async(function checkUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    dispatch(userLogin());\n    dispatch(userLoginSuccess(jwtDecode(data.token)));\n    dispatch(check());\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), isAuth ? _jsx(Todo, {}) : _jsx(Auth, {})]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#202020\",\n    padding: 10\n  }\n});\nexport default Main;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/pages/Main.tsx"],"names":["StatusBar","Auth","useAppDispatch","useAppSelector","Todo","check","useEffect","Main","state","user","isAuth","dispatch","checkUser","userLogin","userLoginSuccess","jwtDecode","data","token","styles","container","StyleSheet","create","flex","backgroundColor","padding"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;AAEA,OAAOC,IAAP;AACA,SAASC,cAAT,EAAyBC,cAAzB;AACA,OAAOC,IAAP;AACA,SAASC,KAAT;AACA,SAASC,SAAT,QAA0B,OAA1B;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,wBAAmBJ,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQC,MAAR,mBAAQA,MAAR;;AACA,MAAMC,QAAQ,GAAGT,cAAc,EAA/B;AAEAI,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMM,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAGFD,IAAAA,QAAQ,CAACE,SAAS,EAAV,CAAR;AACAF,IAAAA,QAAQ,CAACG,gBAAgB,CAACC,SAAS,CAACC,IAAI,CAACC,KAAN,CAAV,CAAjB,CAAR;AAEGN,IAAAA,QAAQ,CAACN,KAAK,EAAN,CAAR;AACD,GARQ,EAQN,EARM,CAAT;AAUA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MADF,EAEGT,MAAM,GAAG,KAAC,IAAD,KAAH,GAAc,KAAC,IAAD,KAFvB;AAAA,IADF;AAMD,CApBD;;AAsBA,IAAMQ,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,OAAO,EAAE;AAHA;AADoB,CAAlB,CAAf;AAQA,eAAejB,IAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport Auth from \"./Auth\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport Todo from \"./Todo\";\r\nimport { check } from \"../http/userAPI\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Main = () => {\r\n  const { isAuth } = useAppSelector((state) => state.user);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n\t  const checkUser = async() => {\r\n\r\n\t  }\r\n\tdispatch(userLogin());\r\n\tdispatch(userLoginSuccess(jwtDecode(data.token)));\r\n\r\n    dispatch(check());\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar style=\"auto\" />\r\n      {isAuth ? <Todo /> : <Auth />}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#202020\",\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}