{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Checkbox from \"react-native-bouncy-checkbox\";\nimport { useAppDispatch } from \"../store/hooks\";\nimport { deleteTodos } from \"../http/todoAPI\";\nimport { checkTodo } from \"../store/todoSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ListItem = function ListItem(_ref) {\n  var todo = _ref.todo;\n  var id = todo.id,\n      checked = todo.checked,\n      title = todo.title;\n  var dispatch = useAppDispatch();\n\n  var onCheck = function onCheck() {\n    dispatch(checkTodo(id));\n  };\n\n  var onDelete = function onDelete() {\n    dispatch(deleteTodos(todo));\n  };\n\n  useEffect(function () {});\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Checkbox, {\n      isChecked: checked,\n      useNativeDriver: false,\n      onPress: onCheck\n    }), _jsx(Text, {\n      style: styles.title,\n      children: title\n    }), _jsx(Button, {\n      title: \"Delete\",\n      onPress: onDelete\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#e4e3e3\",\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 15,\n    padding: 10,\n    height: 40,\n    width: \"100%\"\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: \"#e4e3e3\"\n  },\n  input: {\n    padding: 10,\n    backgroundColor: \"#e4e3e3\",\n    borderRadius: 20,\n    width: \"100\",\n    height: 50,\n    marginBottom: 15\n  }\n});\nexport default ListItem;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/ListItem.tsx"],"names":["React","useEffect","Checkbox","useAppDispatch","deleteTodos","checkTodo","ListItem","todo","id","checked","title","dispatch","onCheck","onDelete","styles","container","StyleSheet","create","display","flexDirection","alignItems","borderColor","borderWidth","borderRadius","marginBottom","padding","height","width","fontSize","fontWeight","color","input","backgroundColor"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;;;;;AAGA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,cAAT;AACA,SAAqBC,WAArB;AACA,SAASC,SAAT;;;;AAKA,IAAMC,QAAuB,GAAG,SAA1BA,QAA0B,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC5C,MAAQC,EAAR,GAA+BD,IAA/B,CAAQC,EAAR;AAAA,MAAYC,OAAZ,GAA+BF,IAA/B,CAAYE,OAAZ;AAAA,MAAqBC,KAArB,GAA+BH,IAA/B,CAAqBG,KAArB;AACA,MAAMC,QAAQ,GAAGR,cAAc,EAA/B;;AAEA,MAAMS,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,QAAQ,CAACN,SAAS,CAACG,EAAD,CAAV,CAAR;AAED,GAHD;;AAIA,MAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBF,IAAAA,QAAQ,CAACP,WAAW,CAACG,IAAD,CAAZ,CAAR;AACD,GAFD;;AAIAN,EAAAA,SAAS,CAAC,YAAM,CAEf,CAFQ,CAAT;AAGA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,QAAD;AAAU,MAAA,SAAS,EAAEN,OAArB;AAA8B,MAAA,eAAe,EAAE,KAA/C;AAAsD,MAAA,OAAO,EAAEG;AAA/D,MADF,EAEE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACJ,KAApB;AAAA,gBAA4BA;AAA5B,MAFF,EAGE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAEG;AAAhC,MAHF;AAAA,IADF;AAOD,CAtBD;;AAwBA,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,WAAW,EAAE,CALJ;AAMTC,IAAAA,YAAY,EAAE,EANL;AAOTC,IAAAA,YAAY,EAAE,EAPL;AAQTC,IAAAA,OAAO,EAAE,EARA;AASTC,IAAAA,MAAM,EAAE,EATC;AAUTC,IAAAA,KAAK,EAAE;AAVE,GADoB;AAa/BjB,EAAAA,KAAK,EAAE;AACLkB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAbwB;AAkB/BC,EAAAA,KAAK,EAAE;AACLN,IAAAA,OAAO,EAAE,EADJ;AAELO,IAAAA,eAAe,EAAE,SAFZ;AAGLT,IAAAA,YAAY,EAAE,EAHT;AAILI,IAAAA,KAAK,EAAE,KAJF;AAKLD,IAAAA,MAAM,EAAE,EALH;AAMLF,IAAAA,YAAY,EAAE;AANT;AAlBwB,CAAlB,CAAf;AA4BA,eAAelB,QAAf","sourcesContent":["import React, { FC, useEffect } from \"react\";\r\nimport { Button, StyleSheet, Text, View } from \"react-native\";\r\nimport { ITodo } from \"../interfaces/ITodo\";\r\nimport Checkbox from \"react-native-bouncy-checkbox\";\r\nimport { useAppDispatch } from \"../store/hooks\";\r\nimport { checkTodos, deleteTodos } from \"../http/todoAPI\";\r\nimport { checkTodo } from \"../store/todoSlice\";\r\n\r\ninterface TodoProps {\r\n  todo: ITodo;\r\n}\r\nconst ListItem: FC<TodoProps> = ({ todo }) => {\r\n  const { id, checked, title } = todo;\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onCheck = () => {\r\n    dispatch(checkTodo(id));\r\n\t \r\n  };\r\n  const onDelete = () => {\r\n    dispatch(deleteTodos(todo));\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n  }, )\r\n  return (\r\n    <View style={styles.container}>\r\n      <Checkbox isChecked={checked} useNativeDriver={false} onPress={onCheck} />\r\n      <Text style={styles.title}>{title}</Text>\r\n      <Button title=\"Delete\" onPress={onDelete} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderColor: \"#e4e3e3\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    marginBottom: 15,\r\n    padding: 10,\r\n    height: 40,\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n    color: \"#e4e3e3\",\r\n  },\r\n  input: {\r\n    padding: 10,\r\n    backgroundColor: \"#e4e3e3\",\r\n    borderRadius: 20,\r\n    width: \"100\",\r\n    height: 50,\r\n    marginBottom: 15,\r\n  },\r\n});\r\n\r\nexport default ListItem;\r\n"]},"metadata":{},"sourceType":"module"}