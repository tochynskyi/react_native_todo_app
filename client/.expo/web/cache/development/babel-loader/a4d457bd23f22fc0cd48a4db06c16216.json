{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Auth from \"./Auth\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport Todo from \"./Todo\";\nimport { check } from \"../http/userAPI\";\nimport { useEffect } from \"react\";\nimport { fetchUserError, userLogin, userLoginSuccess } from \"../store/userSlice\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Main = function Main() {\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.user;\n  }),\n      isAuth = _useAppSelector.isAuth;\n\n  var dispatch = useAppDispatch();\n  useEffect(function () {\n    var checkAuth = function checkAuth() {\n      var user;\n      return _regeneratorRuntime.async(function checkAuth$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch(userLogin());\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(check());\n\n            case 4:\n              user = _context.sent;\n              dispatch(userLoginSuccess(user));\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.response.data.message);\n              dispatch(fetchUserError(_context.t0.response.data.message));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    checkAuth();\n  }, []);\n  return _jsxs(LinearGradient, {\n    colors: [\"#9381ff\", \"#f8f7ff\"],\n    start: {\n      x: 0.9,\n      y: 0.9\n    },\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), isAuth ? _jsx(Todo, {}) : _jsx(Auth, {})]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default Main;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/pages/Main.tsx"],"names":["StatusBar","Auth","useAppDispatch","useAppSelector","Todo","check","useEffect","fetchUserError","userLogin","userLoginSuccess","LinearGradient","Main","state","user","isAuth","dispatch","checkAuth","console","log","response","data","message","x","y","styles","container","StyleSheet","create","flex"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;AAEA,OAAOC,IAAP;AACA,SAASC,cAAT,EAAyBC,cAAzB;AACA,OAAOC,IAAP;AACA,SAASC,KAAT;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SACEC,cADF,EAEEC,SAFF,EAGEC,gBAHF;AAMA,SAASC,cAAT,QAA+B,sBAA/B;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,wBAAmBR,cAAc,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQC,MAAR,mBAAQA,MAAR;;AACA,MAAMC,QAAQ,GAAGb,cAAc,EAA/B;AAEAI,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdD,cAAAA,QAAQ,CAACP,SAAS,EAAV,CAAR;AAFc;AAAA,+CAGKH,KAAK,EAHV;;AAAA;AAGRQ,cAAAA,IAHQ;AAIdE,cAAAA,QAAQ,CAACN,gBAAgB,CAACI,IAAD,CAAjB,CAAR;AAJc;AAAA;;AAAA;AAAA;AAAA;AAMdI,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAEC,QAAF,CAAWC,IAAX,CAAgBC,OAA5B;AACAN,cAAAA,QAAQ,CAACR,cAAc,CAAC,YAAEY,QAAF,CAAWC,IAAX,CAAgBC,OAAjB,CAAf,CAAR;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAUAL,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAE,CAAC,SAAD,EAAW,SAAX,CAAxB;AACF,IAAA,KAAK,EAAE;AAACM,MAAAA,CAAC,EAAE,GAAJ;AAASC,MAAAA,CAAC,EAAE;AAAZ,KADL;AAIF,IAAA,KAAK,EAAEC,MAAM,CAACC,SAJZ;AAAA,eAKI,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MALJ,EAMKX,MAAM,GAAG,KAAC,IAAD,KAAH,GAAc,KAAC,IAAD,KANzB;AAAA,IADF;AAUD,CA5BD;;AA8BA,IAAMU,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf;AAMA,eAAejB,IAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport Auth from \"./Auth\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport Todo from \"./Todo\";\r\nimport { check } from \"../http/userAPI\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  fetchUserError,\r\n  userLogin,\r\n  userLoginSuccess,\r\n} from \"../store/userSlice\";\r\nimport { globalStyles } from \"../styles/global\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\nconst Main = () => {\r\n  const { isAuth } = useAppSelector((state) => state.user);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        dispatch(userLogin());\r\n        const user = await check();\r\n        dispatch(userLoginSuccess(user));\r\n      } catch (e: any) {\r\n        console.log(e.response.data.message);\r\n        dispatch(fetchUserError(e.response.data.message));\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <LinearGradient colors={[\"#9381ff\",\"#f8f7ff\" ]}\r\n\t start={{x: 0.9, y: 0.9}}\r\n\t//  end={{x: 0.4, y: 0.7}}\r\n\r\n\t style={styles.container}>\r\n        <StatusBar style=\"auto\" />\r\n        {isAuth ? <Todo /> : <Auth />}\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}