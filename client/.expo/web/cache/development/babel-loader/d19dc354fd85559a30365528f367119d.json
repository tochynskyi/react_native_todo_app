{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { instance, authInstance } from \"./index\";\nimport jwtDecode from \"jwt-decode\";\nimport { userLogin, userLoginSuccess } from \"../store/userSlice\";\nexport var registration = function registration(username, password) {\n  var _await$instance$post, data;\n\n  return _regeneratorRuntime.async(function registration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(instance.post(\"/api/user/registration\", {\n            username: username,\n            password: password\n          }));\n\n        case 2:\n          _await$instance$post = _context.sent;\n          data = _await$instance$post.data;\n          AsyncStorage.setItem(\"token\", data.token);\n          return _context.abrupt(\"return\", jwtDecode(data.token));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var login = function login(username, password) {\n  return function _callee(dispatch) {\n    var _await$instance$post2, data, user;\n\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            dispatch(userLogin());\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(instance.post(\"/api/user/login\", {\n              username: username,\n              password: password\n            }));\n\n          case 4:\n            _await$instance$post2 = _context2.sent;\n            data = _await$instance$post2.data;\n            AsyncStorage.setItem(\"token\", data.token);\n            user = jwtDecode(data.token);\n            dispatch(userLoginSuccess);\n            return _context2.abrupt(\"return\", user);\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n};\nexport var check = function check() {\n  var _await$authInstance$g, data;\n\n  return _regeneratorRuntime.async(function check$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(authInstance.get(\"/api/user/auth\"));\n\n        case 2:\n          _await$authInstance$g = _context3.sent;\n          data = _await$authInstance$g.data;\n          AsyncStorage.setItem(\"token\", data.token);\n          return _context3.abrupt(\"return\", jwtDecode(data.token));\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/http/userAPI.ts"],"names":["AsyncStorage","instance","authInstance","jwtDecode","userLogin","userLoginSuccess","registration","username","password","post","data","setItem","token","login","dispatch","user","check","get"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,SADF,EAEEC,gBAFF;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAC1BC,QAD0B,EAE1BC,QAF0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIHP,QAAQ,CAACQ,IAAT,CAAc,wBAAd,EAAwC;AAC7DF,YAAAA,QAAQ,EAARA,QAD6D;AAE7DC,YAAAA,QAAQ,EAARA;AAF6D,WAAxC,CAJG;;AAAA;AAAA;AAIlBE,UAAAA,IAJkB,wBAIlBA,IAJkB;AAQ1BV,UAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC;AAR0B,2CASnBT,SAAS,CAACO,IAAI,CAACE,KAAN,CATU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAYP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACN,QAAD,EAA4BC,QAA5B,EAA0D;AAC7E,SAAO,iBAAOM,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,YAAAA,QAAQ,CAACV,SAAS,EAAV,CAAR;AAFG;AAAA,6CAGoBH,QAAQ,CAACQ,IAAT,CAAc,iBAAd,EAAiC;AACtDF,cAAAA,QAAQ,EAARA,QADsD;AAEtDC,cAAAA,QAAQ,EAARA;AAFsD,aAAjC,CAHpB;;AAAA;AAAA;AAGKE,YAAAA,IAHL,yBAGKA,IAHL;AAOHV,YAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC;AACEG,YAAAA,IARC,GAQMZ,SAAS,CAACO,IAAI,CAACE,KAAN,CARf;AASPE,YAAAA,QAAQ,CAACT,gBAAD,CAAR;AATO,8CAUIU,IAVJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAaD,CAdM;AAgBP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACId,YAAY,CAACe,GAAb,CAAiB,gBAAjB,CADJ;;AAAA;AAAA;AACXP,UAAAA,IADW,yBACXA,IADW;AAEnBV,UAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC;AAFmB,4CAGZT,SAAS,CAACO,IAAI,CAACE,KAAN,CAHG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { instance, authInstance } from \"./index\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { AppDispatch } from \"../store/store\";\r\nimport {\r\n  userLogin,\r\n  userLoginSuccess,\r\n  userLoginError,\r\n} from \"../store/userSlice\";\r\n\r\nexport const registration = async (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n  const { data } = await instance.post(\"/api/user/registration\", {\r\n    username,\r\n    password,\r\n  });\r\n  AsyncStorage.setItem(\"token\", data.token);\r\n  return jwtDecode(data.token);\r\n};\r\n\r\nexport const login = (username: string | number, password: string | number) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(userLogin());\r\n      const { data } = await instance.post(\"/api/user/login\", {\r\n        username,\r\n        password,\r\n      });\r\n      AsyncStorage.setItem(\"token\", data.token);\r\n\t\tconst user = jwtDecode(data.token);\r\n\t\tdispatch(userLoginSuccess)\r\n      return user\r\n    } catch (e) {}\r\n  };\r\n};\r\n\r\nexport const check = async () => {\r\n  const { data } = await authInstance.get(\"/api/user/auth\");\r\n  AsyncStorage.setItem(\"token\", data.token);\r\n  return jwtDecode(data.token);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}