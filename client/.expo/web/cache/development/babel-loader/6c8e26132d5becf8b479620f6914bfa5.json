{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { registration, login } from \"../http/fetch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Auth = function Auth() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLogin = _useState6[0],\n      setIsLogin = _useState6[1];\n\n  var onSubmit = function onSubmit(name, password) {\n    var response, _response;\n\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isLogin) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(login(name, password));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(registration(name, password));\n\n          case 8:\n            _response = _context.sent;\n            console.log(_response);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: isLogin ? \"Sing in\" : \"Sign up\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(username) {\n        return setUsername(username);\n      },\n      placeholder: \"Username\"\n    }), _jsx(TextInput, {\n      secureTextEntry: true,\n      style: styles.input,\n      onChangeText: function onChangeText(password) {\n        return setPassword(password);\n      },\n      placeholder: \"Password\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return onSubmit(username, password);\n      },\n      title: isLogin ? \"Entry\" : \"Sign up\"\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        children: isLogin ? 'Don`t have account?' : 'Have '\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  title: {\n    fontSize: 36,\n    color: \"#e4e3e3\",\n    fontWeight: \"700\",\n    marginBottom: 20\n  },\n  input: {\n    padding: 10,\n    backgroundColor: \"#e4e3e3\",\n    borderRadius: 5,\n    width: \"80%\",\n    height: 50,\n    marginBottom: 15\n  }\n});\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/pages/Auth.tsx"],"names":["React","useState","registration","login","Auth","username","setUsername","password","setPassword","isLogin","setIsLogin","onSubmit","name","response","console","log","styles","container","title","input","StyleSheet","create","display","flexDirection","alignItems","justifyContent","width","fontSize","color","fontWeight","marginBottom","padding","backgroundColor","borderRadius","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text, TextInput, Button } from \"react-native\";\r\nimport { registration, login } from \"../http/fetch\";\r\n\r\nconst Auth = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  const onSubmit = async (name: string | number, password: string | number) => {\r\n    if (isLogin) {\r\n      const response = await login(name, password);\r\n    } else {\r\n\t\tconst response = await registration(name, password);\r\n\t\tconsole.log(response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{isLogin ? \"Sing in\" : \"Sign up\"}</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={(username) => setUsername(username)}\r\n        placeholder=\"Username\"\r\n      />\r\n      <TextInput\r\n        secureTextEntry\r\n        style={styles.input}\r\n        onChangeText={(password) => setPassword(password)}\r\n        placeholder=\"Password\"\r\n      />\r\n      <Button\r\n        onPress={() => onSubmit(username, password)}\r\n        title={isLogin ? \"Entry\" : \"Sign up\"}\r\n      />\r\n\t\t<View>\r\n\t\t\t<Text>{isLogin ? 'Don`t have account?': 'Have '}</Text>\r\n\t\t</View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    color: \"#e4e3e3\",\r\n    fontWeight: \"700\",\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    padding: 10,\r\n    backgroundColor: \"#e4e3e3\",\r\n    borderRadius: 5,\r\n    width: \"80%\",\r\n    height: 50,\r\n    marginBottom: 15,\r\n  },\r\n});\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}