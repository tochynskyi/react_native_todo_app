{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItem from \"./ListItem\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport { deleteTodosDB } from \"../../http/todoAPI\";\nimport { deleteTodo } from \"../../store/todoSlice\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar List = function List(_ref) {\n  var todos = _ref.todos;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoId = _useState2[0],\n      setTodoId = _useState2[1];\n\n  var dispatch = useAppDispatch();\n\n  var onRightAction = function onRightAction(id) {\n    return _regeneratorRuntime.async(function onRightAction$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(deleteTodo(id));\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(deleteTodosDB(id));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var onRightAction = function onRightAction(id) {\n      return _regeneratorRuntime.async(function onRightAction$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(deleteTodo(id));\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(deleteTodosDB(id));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    onRightAction(todoId);\n  }, []);\n  return _jsx(View, {\n    children: _jsx(SwipeListView, {\n      data: todos,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(ListItem, {\n          todo: item\n        });\n      },\n      keyExtractor: function keyExtractor(_ref3) {\n        var id = _ref3.id;\n        return id;\n      },\n      renderHiddenItem: function renderHiddenItem() {\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Delete\"\n          })\n        });\n      },\n      useNativeDriver: true,\n      rightActivationValue: -150,\n      onRightAction: onRightAction\n    })\n  });\n};\n\nexport default List;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/List/List.tsx"],"names":["React","useEffect","useState","ListItem","SwipeListView","deleteTodosDB","deleteTodo","useAppDispatch","List","todos","todoId","setTodoId","dispatch","onRightAction","id","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;;;AAGA,OAAOC,QAAP;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAAuBC,aAAvB;AACA,SAAoBC,UAApB;AACA,SAASC,cAAT;;;AAMA,IAAMC,IAAmB,GAAG,SAAtBA,IAAsB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC1C,kBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;;AAEA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AACrBF,YAAAA,QAAQ,CAACN,UAAU,CAACQ,EAAD,CAAX,CAAR;AADqB;AAAA,6CAEdT,aAAa,CAACS,EAAD,CAFC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAKAb,EAAAA,SAAS,CAAC,YAAM;AAEf,QAAMY,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AACrBF,cAAAA,QAAQ,CAACN,UAAU,CAACQ,EAAD,CAAX,CAAR;AADqB;AAAA,+CAEdT,aAAa,CAACS,EAAD,CAFC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAKED,IAAAA,aAAa,CAACH,MAAD,CAAb;AAEH,GATS,EASP,EATO,CAAT;AAaC,SACE,KAAC,IAAD;AAAA,cACE,KAAC,aAAD;AACE,MAAA,IAAI,EAAED,KADR;AAEE,MAAA,UAAU,EAAE;AAAA,YAAGM,IAAH,SAAGA,IAAH;AAAA,eAAc,KAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB,UAAd;AAAA,OAFd;AAGE,MAAA,YAAY,EAAE;AAAA,YAAGD,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAZ;AAAA,OAHhB;AAIE,MAAA,gBAAgB,EAAE;AAAA,eAChB,KAAC,IAAD;AAAA,oBACE,KAAC,IAAD;AAAA;AAAA;AADF,UADgB;AAAA,OAJpB;AASE,MAAA,eAAe,MATjB;AAUE,MAAA,oBAAoB,EAAE,CAAC,GAVzB;AAWE,MAAA,aAAa,EAAED;AAXjB;AADF,IADF;AAiBD,CAvCD;;AAqDA,eAAeL,IAAf","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\nimport { FlatList, StyleSheet, Text, TextInput, View } from \"react-native\";\r\nimport { ITodo } from \"../../interfaces/ITodo\";\r\nimport ListItem from \"./ListItem\";\r\nimport { SwipeListView } from \"react-native-swipe-list-view\";\r\nimport { checkTodosDB, deleteTodosDB } from \"../../http/todoAPI\";\r\nimport { checkTodo, deleteTodo } from \"../../store/todoSlice\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\n\r\ninterface ListProps {\r\n  todos: ITodo[];\r\n}\r\n\r\nconst List: FC<ListProps> = ({ todos }) => {\r\n\tconst [todoId, setTodoId] = useState('')\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst onRightAction = async (id: string) => {\r\n\t\tdispatch(deleteTodo(id));\r\n\t\t await deleteTodosDB(id);\r\n\t  };\r\n\r\n\tuseEffect(() => {\r\n\t\r\n\t\tconst onRightAction = async (id: string) => {\r\n\t\t\tdispatch(deleteTodo(id));\r\n\t\t\t await deleteTodosDB(id);\r\n\t\t  };\r\n\t\t  \r\n\t\t  onRightAction(todoId)\r\n\t\t  \r\n}, [])\r\n  \r\n\r\n\r\n  return (\r\n    <View>\r\n      <SwipeListView\r\n        data={todos}\r\n        renderItem={({ item }) => <ListItem todo={item} />}\r\n        keyExtractor={({ id }) => id}\r\n        renderHiddenItem={() => (\r\n          <View>\r\n            <Text>Delete</Text>\r\n          </View>\r\n        )}\r\n        useNativeDriver\r\n        rightActivationValue={-150}\r\n        onRightAction={onRightAction}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n// const List: FC<ListProps> = ({todos}) => {\r\n//   return (\r\n//     <View>\r\n//       <FlatList\r\n//         data={todos}\r\n//         renderItem={( {item} ) => <ListItem todo={item} />}\r\n//         keyExtractor={({id}) => id}\r\n//       />\r\n//     </View>\r\n//   );\r\n// };\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}