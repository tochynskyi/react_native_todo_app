{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport dayjs from \"dayjs\";\nvar initialState = {\n  loadingTodos: false,\n  todos: [],\n  todoError: \"\"\n};\nvar todoSlice = createSlice({\n  name: \"todo\",\n  initialState: initialState,\n  reducers: {\n    fetchTodos: function fetchTodos(state) {\n      state.loadingTodos = true;\n    },\n    fetchTodosSuccess: function fetchTodosSuccess(state, action) {\n      state.loadingTodos = false;\n      state.todos = action.payload;\n    },\n    fetchTodoError: function fetchTodoError(state, action) {\n      state.loadingTodos = false;\n      state.todoError = action.payload;\n    },\n    addTodo: function addTodo(state, action) {\n      state.todos.push(action.payload);\n    },\n    checkTodo: function checkTodo(state, action) {\n      state.todos.map(function (todo) {\n        return todo.id === action.payload && (todo.checked = !todo.checked);\n      });\n    },\n    deleteTodo: function deleteTodo(state, action) {\n      state.todos = state.todos.filter(function (todo) {\n        return todo.id !== action.payload;\n      });\n    },\n    sortByPriority: function sortByPriority(state) {\n      state.todos.sort(function (a, b) {\n        return a.priority - b.priority;\n      });\n    },\n    sortByDate: function sortByDate(state) {\n      state.todos.sort(function (a, b) {\n        return dayjs(a.date) - dayjs(a.date);\n      });\n    }\n  }\n});\nvar _todoSlice$actions = todoSlice.actions,\n    fetchTodos = _todoSlice$actions.fetchTodos,\n    fetchTodosSuccess = _todoSlice$actions.fetchTodosSuccess,\n    fetchTodoError = _todoSlice$actions.fetchTodoError,\n    addTodo = _todoSlice$actions.addTodo,\n    checkTodo = _todoSlice$actions.checkTodo,\n    deleteTodo = _todoSlice$actions.deleteTodo,\n    sortByPriority = _todoSlice$actions.sortByPriority;\nexport { fetchTodos, fetchTodosSuccess, fetchTodoError, addTodo, checkTodo, deleteTodo, sortByPriority };\nexport default todoSlice.reducer;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/store/todoSlice.ts"],"names":["createSlice","dayjs","initialState","loadingTodos","todos","todoError","todoSlice","name","reducers","fetchTodos","state","fetchTodosSuccess","action","payload","fetchTodoError","addTodo","push","checkTodo","map","todo","id","checked","deleteTodo","filter","sortByPriority","sort","a","b","priority","sortByDate","date","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AASA,IAAMC,YAAuB,GAAG;AAC9BC,EAAAA,YAAY,EAAE,KADgB;AAE9BC,EAAAA,KAAK,EAAE,EAFuB;AAG9BC,EAAAA,SAAS,EAAE;AAHmB,CAAhC;AAMA,IAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAAY,EAAZA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UADQ,sBACGC,KADH,EACU;AAChBA,MAAAA,KAAK,CAACP,YAAN,GAAqB,IAArB;AACD,KAHO;AAIRQ,IAAAA,iBAJQ,6BAIUD,KAJV,EAIiBE,MAJjB,EAIiD;AACvDF,MAAAA,KAAK,CAACP,YAAN,GAAqB,KAArB;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACD,KAPO;AAQRC,IAAAA,cARQ,0BAQOJ,KARP,EAQcE,MARd,EAQ6C;AACnDF,MAAAA,KAAK,CAACP,YAAN,GAAqB,KAArB;AACAO,MAAAA,KAAK,CAACL,SAAN,GAAkBO,MAAM,CAACC,OAAzB;AACD,KAXO;AAYRE,IAAAA,OAZQ,mBAYAL,KAZA,EAYOE,MAZP,EAYqC;AAC3CF,MAAAA,KAAK,CAACN,KAAN,CAAYY,IAAZ,CAAiBJ,MAAM,CAACC,OAAxB;AACD,KAdO;AAeRI,IAAAA,SAfQ,qBAeEP,KAfF,EAeSE,MAfT,EAewC;AAC9CF,MAAAA,KAAK,CAACN,KAAN,CAAYc,GAAZ,CACE,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACC,OAAnB,KAA+BM,IAAI,CAACE,OAAL,GAAe,CAACF,IAAI,CAACE,OAApD,CAAV;AAAA,OADF;AAGD,KAnBO;AAoBRC,IAAAA,UApBQ,sBAoBGZ,KApBH,EAoBUE,MApBV,EAoByC;AAC/CF,MAAAA,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYmB,MAAZ,CAAmB,UAACJ,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACC,OAA7B;AAAA,OAAnB,CAAd;AACD,KAtBO;AAuBVW,IAAAA,cAvBU,0BAuBKd,KAvBL,EAuBY;AACtBA,MAAAA,KAAK,CAACN,KAAN,CAAYqB,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAzB;AAAA,OAAjB;AACC,KAzBS;AA0BVC,IAAAA,UA1BU,sBA0BCnB,KA1BD,EA0BQ;AAClBA,MAAAA,KAAK,CAACN,KAAN,CAAYqB,IAAZ,CAAiB,UAACC,CAAD,EAAGC,CAAH;AAAA,eAAS1B,KAAK,CAACyB,CAAC,CAACI,IAAH,CAAL,GAAgB7B,KAAK,CAACyB,CAAC,CAACI,IAAH,CAA9B;AAAA,OAAjB;AACC;AA5BS;AAHkB,CAAD,CAA7B;AAmCO,yBAQHxB,SAAS,CAACyB,OARP;AAAA,IACLtB,UADK,sBACLA,UADK;AAAA,IAELE,iBAFK,sBAELA,iBAFK;AAAA,IAGLG,cAHK,sBAGLA,cAHK;AAAA,IAILC,OAJK,sBAILA,OAJK;AAAA,IAKLE,SALK,sBAKLA,SALK;AAAA,IAMLK,UANK,sBAMLA,UANK;AAAA,IAOLE,cAPK,sBAOLA,cAPK;;AASP,eAAelB,SAAS,CAAC0B,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport dayjs from \"dayjs\";\r\nimport { ITodo } from \"../interfaces/ITodo\";\r\n\r\ninterface TodoState {\r\n  loadingTodos: boolean;\r\n  todos: ITodo[];\r\n  todoError: string;\r\n}\r\n\r\nconst initialState: TodoState = {\r\n  loadingTodos: false,\r\n  todos: [],\r\n  todoError: \"\",\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState,\r\n  reducers: {\r\n    fetchTodos(state) {\r\n      state.loadingTodos = true;\r\n    },\r\n    fetchTodosSuccess(state, action: PayloadAction<ITodo[]>) {\r\n      state.loadingTodos = false;\r\n      state.todos = action.payload;\r\n    },\r\n    fetchTodoError(state, action: PayloadAction<string>) {\r\n      state.loadingTodos = false;\r\n      state.todoError = action.payload;\r\n    },\r\n    addTodo(state, action: PayloadAction<ITodo>) {\r\n      state.todos.push(action.payload);\r\n    },\r\n    checkTodo(state, action: PayloadAction<string>) {\r\n      state.todos.map(\r\n        (todo) => todo.id === action.payload && (todo.checked = !todo.checked)\r\n      );\r\n    },\r\n    deleteTodo(state, action: PayloadAction<string>) {\r\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\r\n    },\r\n\t sortByPriority(state) {\r\n\t\tstate.todos.sort((a, b) => a.priority - b.priority)\r\n\t },\r\n\t sortByDate(state) {\r\n\t\tstate.todos.sort((a,b) => dayjs(a.date) - dayjs(a.date))\r\n\t }\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchTodos,\r\n  fetchTodosSuccess,\r\n  fetchTodoError,\r\n  addTodo,\r\n  checkTodo,\r\n  deleteTodo,\r\n  sortByPriority\r\n} = todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}