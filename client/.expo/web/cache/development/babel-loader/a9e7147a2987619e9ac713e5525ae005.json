{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  loading: false,\n  isAuth: false,\n  user: null,\n  userError: \"\"\n};\nvar userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    userLogin: function userLogin(state) {\n      state.loading = true;\n    },\n    userLoginSuccess: function userLoginSuccess(state, action) {\n      state.isAuth = true;\n      state.loading = false;\n      state.userError = \"\";\n      state.user = action.payload;\n    },\n    fetchUserError: function fetchUserError(state, action) {\n      state.loading = false;\n      state.userError = action.payload;\n    },\n    userLogout: function userLogout(state) {\n      state.isAuth = false;\n      state.user = {};\n      state.userError = \"\";\n    }\n  }\n});\nvar _userSlice$actions = userSlice.actions,\n    userLogin = _userSlice$actions.userLogin,\n    userLoginSuccess = _userSlice$actions.userLoginSuccess,\n    fetchUserError = _userSlice$actions.fetchUserError,\n    userLogout = _userSlice$actions.userLogout;\nexport { userLogin, userLoginSuccess, fetchUserError, userLogout };\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/store/userSlice.ts"],"names":["createSlice","initialState","loading","isAuth","user","userError","userSlice","name","reducers","userLogin","state","userLoginSuccess","action","payload","fetchUserError","userLogout","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAUA,IAAMC,YAAuB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,KADqB;AAE9BC,EAAAA,MAAM,EAAE,KAFsB;AAG9BC,EAAAA,IAAI,EAAE,IAHwB;AAI9BC,EAAAA,SAAS,EAAE;AAJmB,CAAhC;AAOA,IAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,MADsB;AAE5BN,EAAAA,YAAY,EAAZA,YAF4B;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SADQ,qBACEC,KADF,EACS;AACfA,MAAAA,KAAK,CAACR,OAAN,GAAgB,IAAhB;AACD,KAHO;AAIRS,IAAAA,gBAJQ,4BAISD,KAJT,EAIgBE,MAJhB,EAI8C;AACpDF,MAAAA,KAAK,CAACP,MAAN,GAAe,IAAf;AACAO,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACAQ,MAAAA,KAAK,CAACL,SAAN,GAAkB,EAAlB;AACAK,MAAAA,KAAK,CAACN,IAAN,GAAaQ,MAAM,CAACC,OAApB;AACD,KATO;AAURC,IAAAA,cAVQ,0BAUOJ,KAVP,EAUcE,MAVd,EAU6C;AACnDF,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACAQ,MAAAA,KAAK,CAACL,SAAN,GAAkBO,MAAM,CAACC,OAAzB;AACD,KAbO;AAeRE,IAAAA,UAfQ,sBAeGL,KAfH,EAeU;AAChBA,MAAAA,KAAK,CAACP,MAAN,GAAe,KAAf;AACAO,MAAAA,KAAK,CAACN,IAAN,GAAa,EAAb;AACAM,MAAAA,KAAK,CAACL,SAAN,GAAkB,EAAlB;AACD;AAnBO;AAHkB,CAAD,CAA7B;AA0BO,yBACLC,SAAS,CAACU,OADL;AAAA,IAAQP,SAAR,sBAAQA,SAAR;AAAA,IAAmBE,gBAAnB,sBAAmBA,gBAAnB;AAAA,IAAqCG,cAArC,sBAAqCA,cAArC;AAAA,IAAqDC,UAArD,sBAAqDA,UAArD;;AAEP,eAAeT,SAAS,CAACW,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IUser } from \"../interfaces/IUser\";\r\n\r\ninterface UserState {\r\n  loading: boolean;\r\n  isAuth: boolean;\r\n  user: IUser | null;\r\n  userError: string;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  loading: false,\r\n  isAuth: false,\r\n  user: null,\r\n  userError: \"\",\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    userLogin(state) {\r\n      state.loading = true;\r\n    },\r\n    userLoginSuccess(state, action: PayloadAction<IUser>) {\r\n      state.isAuth = true;\r\n      state.loading = false;\r\n      state.userError = \"\";\r\n      state.user = action.payload;\r\n    },\r\n    fetchUserError(state, action: PayloadAction<string>) {\r\n      state.loading = false;\r\n      state.userError = action.payload;\r\n    },\r\n\r\n    userLogout(state) {\r\n      state.isAuth = false;\r\n      state.user = {};\r\n      state.userError = \"\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const { userLogin, userLoginSuccess, fetchUserError, userLogout } =\r\n  userSlice.actions;\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}