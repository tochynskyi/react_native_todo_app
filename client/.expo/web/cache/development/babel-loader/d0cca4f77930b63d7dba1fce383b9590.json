{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { instance, authInstance } from \"./index\";\nimport jwtDecode from \"jwt-decode\";\nimport { userLogin, userLoginSuccess, userError, userLogout } from \"../store/userSlice\";\nexport var registration = function registration(username, password) {\n  return function _callee(dispatch) {\n    var _await$instance$post, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(instance.post(\"/api/user/registration\", {\n              username: username,\n              password: password\n            }));\n\n          case 3:\n            _await$instance$post = _context.sent;\n            data = _await$instance$post.data;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", data.token));\n\n          case 7:\n            return _context.abrupt(\"return\", jwtDecode(data.token));\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", console.log(_context.t0.response.data.message));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};\nexport var login = function login(username, password) {\n  return function _callee2(dispatch) {\n    var _await$instance$post2, data;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            dispatch(userLogin());\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(instance.post(\"/api/user/login\", {\n              username: username,\n              password: password\n            }));\n\n          case 4:\n            _await$instance$post2 = _context2.sent;\n            data = _await$instance$post2.data;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", data.token));\n\n          case 8:\n            dispatch(userLoginSuccess(jwtDecode(data.token)));\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch(userError(_context2.t0.response.data.message));\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};\nexport var logout = function logout() {\n  return function _callee3(dispatch) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            AsyncStorage.removeItem(\"token\");\n            dispatch(userLogout());\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var check = function check() {\n  return function _callee4(dispatch) {\n    var _await$authInstance$g, data;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch(userLogin());\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(authInstance.get(\"/api/user/auth\"));\n\n          case 3:\n            _await$authInstance$g = _context4.sent;\n            data = _await$authInstance$g.data;\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", data.token));\n\n          case 7:\n            dispatch(userLoginSuccess(jwtDecode(data.token)));\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/http/userAPI.ts"],"names":["AsyncStorage","instance","authInstance","jwtDecode","userLogin","userLoginSuccess","userError","userLogout","registration","username","password","dispatch","post","data","setItem","token","console","log","response","message","login","logout","removeItem","check","get"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,SADF,EAEEC,gBAFF,EAGEC,SAHF,EAIEC,UAJF;AAOA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAC1BC,QAD0B,EAE1BC,QAF0B,EAGvB;AACH,SAAO,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEoBV,QAAQ,CAACW,IAAT,CAAc,wBAAd,EAAwC;AAC7DH,cAAAA,QAAQ,EAARA,QAD6D;AAE7DC,cAAAA,QAAQ,EAARA;AAF6D,aAAxC,CAFpB;;AAAA;AAAA;AAEKG,YAAAA,IAFL,wBAEKA,IAFL;AAAA;AAAA,6CAMGb,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC,CANH;;AAAA;AAAA,6CAOIZ,SAAS,CAACU,IAAI,CAACE,KAAN,CAPb;;AAAA;AAAA;AAAA;AAAA,6CASIC,OAAO,CAACC,GAAR,CAAY,YAAEC,QAAF,CAAWL,IAAX,CAAgBM,OAA5B,CATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAYD,CAhBM;AAkBP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACX,QAAD,EAA4BC,QAA5B,EAA0D;AAC7E,SAAO,kBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,YAAAA,QAAQ,CAACP,SAAS,EAAV,CAAR;AAFG;AAAA,6CAGoBH,QAAQ,CAACW,IAAT,CAAc,iBAAd,EAAiC;AACtDH,cAAAA,QAAQ,EAARA,QADsD;AAEtDC,cAAAA,QAAQ,EAARA;AAFsD,aAAjC,CAHpB;;AAAA;AAAA;AAGKG,YAAAA,IAHL,yBAGKA,IAHL;AAAA;AAAA,6CAOGb,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC,CAPH;;AAAA;AAQHJ,YAAAA,QAAQ,CAACN,gBAAgB,CAACF,SAAS,CAACU,IAAI,CAACE,KAAN,CAAV,CAAjB,CAAR;AARG;AAAA;;AAAA;AAAA;AAAA;AAUHJ,YAAAA,QAAQ,CAACL,SAAS,CAAC,aAAEY,QAAF,CAAWL,IAAX,CAAgBM,OAAjB,CAAV,CAAR;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAaD,CAdM;AAgBP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAO,kBAAOV,QAAP;AAAA;AAAA;AAAA;AAAA;AACLX,YAAAA,YAAY,CAACsB,UAAb,CAAwB,OAAxB;AACAX,YAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAID,CALM;AAOP,OAAO,IAAMgB,KAAK,GAAG,SAARA,KAAQ,GAAM;AACzB,SAAO,kBAAOZ,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLA,YAAAA,QAAQ,CAACP,SAAS,EAAV,CAAR;AADK;AAAA,6CAEkBF,YAAY,CAACsB,GAAb,CAAiB,gBAAjB,CAFlB;;AAAA;AAAA;AAEGX,YAAAA,IAFH,yBAEGA,IAFH;AAAA;AAAA,6CAGCb,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC,CAHD;;AAAA;AAILJ,YAAAA,QAAQ,CAACN,gBAAgB,CAACF,SAAS,CAACU,IAAI,CAACE,KAAN,CAAV,CAAjB,CAAR;;AAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAMD,CAPM","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { instance, authInstance } from \"./index\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { AppDispatch } from \"../store/store\";\r\nimport {\r\n  userLogin,\r\n  userLoginSuccess,\r\n  userError,\r\n  userLogout,\r\n} from \"../store/userSlice\";\r\n\r\nexport const registration = (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    try {\r\n      const { data } = await instance.post(\"/api/user/registration\", {\r\n        username,\r\n        password,\r\n      });\r\n      await AsyncStorage.setItem(\"token\", data.token);\r\n      return jwtDecode(data.token);\r\n    } catch (e: any) {\r\n      return console.log(e.response.data.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const login = (username: string | number, password: string | number) => {\r\n  return async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(userLogin());\r\n      const { data } = await instance.post(\"/api/user/login\", {\r\n        username,\r\n        password,\r\n      });\r\n      await AsyncStorage.setItem(\"token\", data.token);\r\n      dispatch(userLoginSuccess(jwtDecode(data.token)));\r\n    } catch (e: any) {\r\n      dispatch(userError(e.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async (dispatch: AppDispatch) => {\r\n    AsyncStorage.removeItem(\"token\");\r\n    dispatch(userLogout());\r\n  };\r\n};\r\n\r\nexport const check = () => {\r\n  return async (dispatch: AppDispatch) => {\r\n    dispatch(userLogin());\r\n    const { data } = await authInstance.get(\"/api/user/auth\");\r\n    await AsyncStorage.setItem(\"token\", data.token);\r\n    dispatch(userLoginSuccess(jwtDecode(data.token)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}