{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { instance } from \"./index\";\nexport var registration = function registration(username, password) {\n  var response;\n  return _regeneratorRuntime.async(function registration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          response = instance.post(\"/user/registration\", {\n            username: username,\n            password: password\n          });\n          return _context.abrupt(\"return\", response);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var login = function login(username, password) {\n  var response;\n  return _regeneratorRuntime.async(function login$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          response = instance.post(\"/user/login\", {\n            username: username,\n            password: password\n          });\n          return _context2.abrupt(\"return\", response);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var check = function check() {\n  var response;\n  return _regeneratorRuntime.async(function check$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          response = instance.get(\"/user/auth\");\n          return _context3.abrupt(\"return\", response);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/http/fetch.ts"],"names":["instance","registration","username","password","response","post","login","check","get"],"mappings":";AAAA,SAASA,QAAT;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAC1BC,QAD0B,EAE1BC,QAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAIpBC,UAAAA,QAJoB,GAITJ,QAAQ,CAACK,IAAT,CAAc,oBAAd,EAAoC;AACnDH,YAAAA,QAAQ,EAARA,QADmD;AAEnDC,YAAAA,QAAQ,EAARA;AAFmD,WAApC,CAJS;AAAA,2CAQnBC,QARmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAWP,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,CACnBJ,QADmB,EAEnBC,QAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAIbC,UAAAA,QAJa,GAIFJ,QAAQ,CAACK,IAAT,CAAc,aAAd,EAA6B;AAC5CH,YAAAA,QAAQ,EAARA,QAD4C;AAE5CC,YAAAA,QAAQ,EAARA;AAF4C,WAA7B,CAJE;AAAA,4CAQZC,QARY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AAWP,OAAO,IAAMG,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AACdH,UAAAA,QADc,GACHJ,QAAQ,CAACQ,GAAT,CAAa,YAAb,CADG;AAAA,4CAEbJ,QAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["import { instance } from \"./index\";\r\n\r\nexport const registration = async (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n  const response = instance.post(\"/user/registration\", {\r\n    username,\r\n    password,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const login = async (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n  const response = instance.post(\"/user/login\", {\r\n    username,\r\n    password,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const check = async () => {\r\n\tconst response = instance.get(\"/user/auth\");\r\n\treturn response;\r\n };\r\n"]},"metadata":{},"sourceType":"module"}