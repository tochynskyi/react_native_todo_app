{"ast":null,"code":"import React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListItem from \"./ListItem\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport { useAppDispatch } from \"../store/hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar List = function List(_ref) {\n  var todos = _ref.todos;\n  var dispatch = useAppDispatch();\n\n  var onRightAction = function onRightAction(rowKey, rowMap) {\n    console.log(\"onRightAction\", rowKey, rowMap);\n  };\n\n  return _jsx(View, {\n    children: _jsx(SwipeListView, {\n      data: todos,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(ListItem, {\n          todo: item\n        });\n      },\n      keyExtractor: function keyExtractor(_ref3) {\n        var id = _ref3.id;\n        return id;\n      },\n      renderHiddenItem: function renderHiddenItem() {\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Delete\"\n          })\n        });\n      },\n      rightActivationValue: -200,\n      useNativeDriver: true,\n      rightActivationValue: 100,\n      onRightAction: onRightAction\n    })\n  });\n};\n\nexport default List;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/List.tsx"],"names":["React","ListItem","SwipeListView","useAppDispatch","List","todos","dispatch","onRightAction","rowKey","rowMap","console","log","item","id"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;;;AAGA,OAAOC,QAAP;AACA,SAASC,aAAT,QAA8B,8BAA9B;AAGA,SAASC,cAAT;;;AAMA,IAAMC,IAAmB,GAAG,SAAtBA,IAAsB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACzC,MAAMC,QAAQ,GAAGH,cAAc,EAA/B;;AAEA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASC,MAAT,EAAoB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,MAA7B,EAAqCC,MAArC;AACD,GAFD;;AAOA,SACE,KAAC,IAAD;AAAA,cACE,KAAC,aAAD;AACE,MAAA,IAAI,EAAEJ,KADR;AAEE,MAAA,UAAU,EAAE;AAAA,YAAGO,IAAH,SAAGA,IAAH;AAAA,eAAc,KAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB,UAAd;AAAA,OAFd;AAGE,MAAA,YAAY,EAAE;AAAA,YAAGC,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAZ;AAAA,OAHhB;AAIE,MAAA,gBAAgB,EAAE;AAAA,eAChB,KAAC,IAAD;AAAA,oBACE,KAAC,IAAD;AAAA;AAAA;AADF,UADgB;AAAA,OAJpB;AASF,MAAA,oBAAoB,EAAE,CAAC,GATrB;AAUF,MAAA,eAAe,MAVb;AAWE,MAAA,oBAAoB,EAAE,GAXxB;AAYE,MAAA,aAAa,EAAEN;AAZjB;AADF,IADF;AAkBD,CA5BD;;AA0CA,eAAeH,IAAf","sourcesContent":["import React, { FC } from \"react\";\r\nimport { FlatList, StyleSheet, Text, TextInput, View } from \"react-native\";\r\nimport { ITodo } from \"../interfaces/ITodo\";\r\nimport ListItem from \"./ListItem\";\r\nimport { SwipeListView } from \"react-native-swipe-list-view\";\r\nimport { checkTodosDB, deleteTodosDB } from \"../http/todoAPI\";\r\nimport { checkTodo, deleteTodo } from \"../store/todoSlice\";\r\nimport { useAppDispatch } from \"../store/hooks\";\r\n\r\ninterface ListProps {\r\n  todos: ITodo[];\r\n}\r\n\r\nconst List: FC<ListProps> = ({ todos }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onRightAction = (rowKey, rowMap) => {\r\n    console.log(\"onRightAction\", rowKey, rowMap);\r\n  };\r\n  // const onDelete = async () => {\r\n  // \tdispatch(deleteTodo());\r\n  // \tawait deleteTodosDB();\r\n  //  };\r\n  return (\r\n    <View>\r\n      <SwipeListView\r\n        data={todos}\r\n        renderItem={({ item }) => <ListItem todo={item} />}\r\n        keyExtractor={({ id }) => id}\r\n        renderHiddenItem={() => (\r\n          <View>\r\n            <Text>Delete</Text>\r\n          </View>\r\n        )}\r\n\t\t  rightActivationValue={-200}\r\n\t\t  useNativeDriver\r\n        rightActivationValue={100}\r\n        onRightAction={onRightAction}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n// const List: FC<ListProps> = ({todos}) => {\r\n//   return (\r\n//     <View>\r\n//       <FlatList\r\n//         data={todos}\r\n//         renderItem={( {item} ) => <ListItem todo={item} />}\r\n//         keyExtractor={({id}) => id}\r\n//       />\r\n//     </View>\r\n//   );\r\n// };\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}