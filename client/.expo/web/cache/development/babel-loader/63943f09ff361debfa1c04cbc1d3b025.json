{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { registration, login } from \"../http/userAPI\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { fetchUserError, userLogin, userLoginSuccess } from \"../store/userSlice\";\nimport { Colors } from \"../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Auth = function Auth() {\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.user;\n  }),\n      userError = _useAppSelector.userError;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLogin = _useState6[0],\n      setIsLogin = _useState6[1];\n\n  var dispatch = useAppDispatch();\n\n  var onSubmit = function onSubmit() {\n    var user;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!isLogin) {\n              _context.next = 8;\n              break;\n            }\n\n            dispatch(userLogin());\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(login(username, password));\n\n          case 5:\n            user = _context.sent;\n            dispatch(userLoginSuccess(user));\n            return _context.abrupt(\"return\");\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(registration(username, password));\n\n          case 10:\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.response.data.message);\n            dispatch(fetchUserError(_context.t0.response.data.message));\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  return _jsxs(LinearGradient, {\n    colors: [Colors.primaryBg, Colors.white],\n    style: styles.container,\n    children: [!!userError && _jsx(Text, {\n      children: userError\n    }), _jsx(Text, {\n      style: styles.title,\n      children: isLogin ? \"Sing in\" : \"Sign up\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(username) {\n        return setUsername(username);\n      },\n      placeholder: \"Username\"\n    }), _jsx(TextInput, {\n      secureTextEntry: true,\n      style: styles.input,\n      onChangeText: function onChangeText(password) {\n        return setPassword(password);\n      },\n      placeholder: \"Password\"\n    }), _jsx(Pressable, {\n      style: styles.submitBtn,\n      onPress: onSubmit,\n      children: _jsx(Text, {\n        style: styles.submitBtnTitle,\n        children: isLogin ? \"Entry\" : \"Create account\"\n      })\n    }), _jsxs(View, {\n      style: styles.choiceWrapper,\n      children: [_jsx(Text, {\n        style: styles.choiceTitle,\n        children: isLogin ? \"Don`t have an account?\" : \"Already have an account?\"\n      }), _jsx(Pressable, {\n        style: styles.choiceBtn,\n        onPress: function onPress() {\n          return setIsLogin(!isLogin);\n        },\n        children: _jsx(Text, {\n          style: styles.choiceBtnTitle,\n          children: isLogin ? \"Sign up\" : \"Sign in\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  title: {\n    fontSize: 46,\n    fontWeight: \"700\",\n    marginBottom: 20,\n    color: Colors.white\n  },\n  input: {\n    fontSize: 18,\n    padding: 10,\n    backgroundColor: Colors.white,\n    borderRadius: 15,\n    width: \"80%\",\n    height: 50,\n    marginBottom: 15\n  },\n  submitBtn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: 5,\n    backgroundColor: Colors.primaryBg,\n    borderColor: Colors.primaryBg,\n    borderRadius: 15,\n    width: \"80%\",\n    height: 50,\n    overflow: \"hidden\"\n  },\n  submitBtnTitle: {\n    fontSize: 26,\n    fontWeight: \"700\",\n    color: Colors.white\n  },\n  choiceWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    width: \"65%\",\n    marginTop: 20\n  },\n  choiceTitle: {\n    fontSize: 16,\n    marginRight: 10,\n    color: Colors.gray\n  },\n  choiceBtn: {\n    height: 23\n  },\n  choiceBtnTitle: {\n    fontSize: 16,\n    fontWeight: \"600\",\n    color: Colors.black\n  }\n});\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/pages/Auth.tsx"],"names":["LinearGradient","React","useState","registration","login","useAppDispatch","useAppSelector","fetchUserError","userLogin","userLoginSuccess","Colors","Auth","state","user","userError","username","setUsername","password","setPassword","isLogin","setIsLogin","dispatch","onSubmit","console","log","response","data","message","primaryBg","white","styles","container","title","input","submitBtn","submitBtnTitle","choiceWrapper","choiceTitle","choiceBtn","choiceBtnTitle","StyleSheet","create","flex","alignItems","justifyContent","width","fontSize","fontWeight","marginBottom","color","padding","backgroundColor","borderRadius","height","display","borderColor","overflow","flexDirection","marginTop","marginRight","gray","black"],"mappings":"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","sourcesContent":["import { LinearGradient } from \"expo-linear-gradient\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  Pressable,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { registration, login } from \"../http/userAPI\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport {\r\n  fetchUserError,\r\n  userLogin,\r\n  userLoginSuccess,\r\n} from \"../store/userSlice\";\r\nimport { Colors } from \"../styles/colors\";\r\nimport { globalStyles } from \"../styles/global\";\r\n\r\nconst Auth = () => {\r\n  const { userError } = useAppSelector((state) => state.user);\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [isLogin, setIsLogin] = useState<boolean>(true);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      if (isLogin) {\r\n        dispatch(userLogin());\r\n        const user = await login(username, password);\r\n        dispatch(userLoginSuccess(user));\r\n        return;\r\n      }\r\n      await registration(username, password);\r\n    } catch (e: any) {\r\n      console.log(e.response.data.message);\r\n      dispatch(fetchUserError(e.response.data.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={[Colors.primaryBg, Colors.white]}\r\n      style={styles.container}\r\n    >\r\n      {!!userError && <Text>{userError}</Text>}\r\n      <Text style={styles.title}>{isLogin ? \"Sing in\" : \"Sign up\"}</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={(username) => setUsername(username)}\r\n        placeholder=\"Username\"\r\n      />\r\n      <TextInput\r\n        secureTextEntry\r\n        style={styles.input}\r\n        onChangeText={(password) => setPassword(password)}\r\n        placeholder=\"Password\"\r\n      />\r\n      <Pressable style={styles.submitBtn} onPress={onSubmit}>\r\n        <Text style={styles.submitBtnTitle}>\r\n          {isLogin ? \"Entry\" : \"Create account\"}\r\n        </Text>\r\n      </Pressable>\r\n      <View style={styles.choiceWrapper}>\r\n        <Text style={styles.choiceTitle}>\r\n          {isLogin ? \"Don`t have an account?\" : \"Already have an account?\"}\r\n        </Text>\r\n        <Pressable\r\n          style={styles.choiceBtn}\r\n          onPress={() => setIsLogin(!isLogin)}\r\n        >\r\n          <Text style={styles.choiceBtnTitle}>\r\n            {isLogin ? \"Sign up\" : \"Sign in\"}\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    fontSize: 46,\r\n    fontWeight: \"700\",\r\n    marginBottom: 20,\r\n    color: Colors.white,\r\n  },\r\n  input: {\r\n    fontSize: 18,\r\n    padding: 10,\r\n    backgroundColor: Colors.white,\r\n    borderRadius: 15,\r\n    width: \"80%\",\r\n    height: 50,\r\n    marginBottom: 15,\r\n  },\r\n  submitBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 5,\r\n    backgroundColor: Colors.primaryBg,\r\n    borderColor: Colors.primaryBg,\r\n    borderRadius: 15,\r\n    width: \"80%\",\r\n    height: 50,\r\n    overflow: \"hidden\",\r\n  },\r\n  submitBtnTitle: {\r\n    fontSize: 26,\r\n    fontWeight: \"700\",\r\n    color: Colors.white,\r\n  },\r\n  choiceWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    width: \"65%\",\r\n    marginTop: 20,\r\n  },\r\n  choiceTitle: {\r\n    fontSize: 16,\r\n    marginRight: 10,\r\n    color: Colors.gray,\r\n  },\r\n  choiceBtn: {\r\n    height: 23,\r\n  },\r\n  choiceBtnTitle: {\r\n    fontSize: 16,\r\n    fontWeight: \"600\",\r\n    color: Colors.black,\r\n  },\r\n});\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}