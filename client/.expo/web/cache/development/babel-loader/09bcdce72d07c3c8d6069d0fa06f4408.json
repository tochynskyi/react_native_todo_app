{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport dayjs from \"dayjs\";\nimport { useState } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { addTodosDB } from \"../../http/todoAPI\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { addTodo, fetchTodoError } from \"../../store/todoSlice\";\nimport { Colors } from \"../../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar todoPriority = [{\n  title: \"High\",\n  number: 1\n}, {\n  title: \"Middle\",\n  number: 2\n}, {\n  title: \"Low\",\n  number: 3\n}, {\n  title: \"None\",\n  number: 4\n}];\n\nvar TodoForm = function TodoForm(_ref) {\n  var isOpen = _ref.isOpen,\n      setIsOpen = _ref.setIsOpen;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(todoPriority[3].number),\n      _useState4 = _slicedToArray(_useState3, 2),\n      priority = _useState4[0],\n      setPriority = _useState4[1];\n\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.user;\n  }),\n      user = _useAppSelector.user;\n\n  var dispatch = useAppDispatch();\n\n  var createTodo = function createTodo() {\n    var newTodo;\n    return _regeneratorRuntime.async(function createTodo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(value && user)) {\n              _context.next = 8;\n              break;\n            }\n\n            newTodo = {\n              id: Date.now().toString(),\n              author: user.id,\n              checked: false,\n              title: value,\n              priority: priority,\n              addDate: dayjs().format()\n            };\n            dispatch(addTodo(newTodo));\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(addTodosDB(newTodo));\n\n          case 6:\n            setValue(\"\");\n            return _context.abrupt(\"return\");\n\n          case 8:\n            return _context.abrupt(\"return\", console.log(\"Todo must have title\"));\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch(fetchTodoError(_context.t0));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  console.log(isOpen);\n  return _jsx(Animated.View, {});\n};\n\nvar styles = StyleSheet.create({\n  formOpen: {\n    backgroundColor: Colors.black,\n    height: \"100%\",\n    width: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    transform: [{\n      translateY: -1000\n    }]\n  },\n  open: {\n    transform: [{\n      translateY: 0\n    }]\n  },\n  formOpenContent: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 10,\n    marginBottom: 15\n  },\n  input: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: Colors.white,\n    borderRadius: 15,\n    height: 60,\n    marginRight: 5,\n    maxWidth: 500,\n    fontSize: 18\n  },\n  modalBtn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 60,\n    width: 60,\n    borderWidth: 1,\n    borderRadius: 15,\n    marginRight: 5\n  },\n  dropdownList: {\n    position: \"relative\",\n    bottom: 0,\n    left: 0,\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: Colors.background,\n    paddingHorizontal: 40\n  },\n  addBtn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 60,\n    width: 60,\n    borderRadius: 15,\n    backgroundColor: Colors.primaryBg\n  }\n});\nexport default TodoForm;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/Form/TodoForm.tsx"],"names":["dayjs","useState","addTodosDB","useAppDispatch","useAppSelector","addTodo","fetchTodoError","Colors","todoPriority","title","number","TodoForm","isOpen","setIsOpen","value","setValue","priority","setPriority","state","user","dispatch","createTodo","newTodo","id","Date","now","toString","author","checked","addDate","format","console","log","styles","StyleSheet","create","formOpen","backgroundColor","black","height","width","position","top","left","flex","alignItems","justifyContent","transform","translateY","open","formOpenContent","display","flexDirection","paddingHorizontal","marginBottom","input","padding","white","borderRadius","marginRight","maxWidth","fontSize","modalBtn","borderWidth","dropdownList","bottom","background","addBtn","primaryBg"],"mappings":"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","sourcesContent":["import dayjs from \"dayjs\";\r\nimport { Dispatch, FC, SetStateAction, useState } from \"react\";\r\nimport { Animated, Pressable, StyleSheet, TextInput, View } from \"react-native\";\r\nimport { Ionicons, Entypo, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport ModalDropdown from \"react-native-modal-dropdown\";\r\nimport { addTodosDB } from \"../../http/todoAPI\";\r\nimport { ITodo } from \"../../interfaces/ITodo\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport { addTodo, fetchTodoError } from \"../../store/todoSlice\";\r\nimport RowOptions from \"./RowOptions\";\r\nimport { Colors } from \"../../styles/colors\";\r\n\r\nconst todoPriority = [\r\n  { title: \"High\", number: 1 },\r\n  { title: \"Middle\", number: 2 },\r\n  { title: \"Low\", number: 3 },\r\n  { title: \"None\", number: 4 },\r\n];\r\n\r\ninterface TodoFormProps {\r\n  isOpen: boolean;\r\n  setIsOpen: Dispatch<SetStateAction<boolean>>;\r\n}\r\nconst TodoForm: FC<TodoFormProps> = ({ isOpen, setIsOpen }) => {\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const [priority, setPriority] = useState<number>(todoPriority[3].number);\r\n  const { user } = useAppSelector((state) => state.user);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const createTodo = async () => {\r\n    try {\r\n      if (value && user) {\r\n        const newTodo: ITodo = {\r\n          id: Date.now().toString(),\r\n          author: user.id,\r\n          checked: false,\r\n          title: value,\r\n          priority: priority,\r\n          addDate: dayjs().format(),\r\n        };\r\n        dispatch(addTodo(newTodo));\r\n        await addTodosDB(newTodo);\r\n        setValue(\"\");\r\n        return;\r\n      }\r\n      return console.log(\"Todo must have title\");\r\n    } catch (error: any) {\r\n      dispatch(fetchTodoError(error));\r\n    }\r\n  };\r\n\r\n  console.log(isOpen);\r\n\r\n\r\n  return (\r\n\t  <Animated.View>\r\n\r\n\t  </Animated.View>\r\n    \r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  formOpen: {\r\n\tbackgroundColor: Colors.black,\r\n\theight: \"100%\",\r\n\twidth: \"100%\",\r\n\tposition: \"absolute\",\r\n\ttop: 0,\r\n\tleft: 0,\r\n\tflex: 1,\r\n\talignItems: \"center\",\r\n\tjustifyContent: \"flex-end\",\r\n\ttransform: [{translateY: -1000}],\r\n\t\r\n  },\r\n  open: {  \r\n\ttransform: [{translateY: 0}]\r\n  },\r\n  formOpenContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 10,\r\n    marginBottom: 15,\r\n  },\r\n\r\n  input: {\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: Colors.white,\r\n    borderRadius: 15,\r\n    height: 60,\r\n    marginRight: 5,\r\n    maxWidth: 500,\r\n    fontSize: 18,\r\n  },\r\n  modalBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 60,\r\n    width: 60,\r\n    borderWidth: 1,\r\n    borderRadius: 15,\r\n    marginRight: 5,\r\n  },\r\n\r\n  dropdownList: {\r\n    position: \"relative\",\r\n    bottom: 0,\r\n    left: 0,\r\n    flex: 1,\r\n    width: \"100%\",\r\n    backgroundColor: Colors.background,\r\n    paddingHorizontal: 40,\r\n  },\r\n\r\n  addBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 60,\r\n    width: 60,\r\n    borderRadius: 15,\r\n    backgroundColor: Colors.primaryBg,\r\n  },\r\n});\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}