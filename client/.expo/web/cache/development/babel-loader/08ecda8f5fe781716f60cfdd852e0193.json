{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TOUCHABLE_ELEMENTS = ['TouchableHighlight', 'TouchableOpacity', 'TouchableWithoutFeedback', 'TouchableNativeFeedback'];\n\nvar ModalDropdown = function (_Component) {\n  _inherits(ModalDropdown, _Component);\n\n  var _super = _createSuper(ModalDropdown);\n\n  function ModalDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, ModalDropdown);\n\n    _this = _super.call(this, props);\n\n    _this._onButtonPress = function () {\n      var onDropdownWillShow = _this.props.onDropdownWillShow;\n\n      if (!onDropdownWillShow || onDropdownWillShow() !== false) {\n        _this.show();\n      }\n    };\n\n    _this._onRequestClose = function () {\n      var onDropdownWillHide = _this.props.onDropdownWillHide;\n\n      if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n        _this.hide();\n      }\n    };\n\n    _this._onModalPress = function () {\n      var onDropdownWillHide = _this.props.onDropdownWillHide;\n\n      if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n        _this.hide();\n      }\n    };\n\n    _this._renderLoading = function () {\n      return _jsx(ActivityIndicator, {\n        size: \"small\"\n      });\n    };\n\n    _this._renderSearchInput = function () {\n      var _this$props = _this.props,\n          showSearch = _this$props.showSearch,\n          renderSearch = _this$props.renderSearch,\n          searchInputStyle = _this$props.searchInputStyle,\n          searchPlaceholder = _this$props.searchPlaceholder,\n          initialOptions = _this$props.options,\n          keySearchObject = _this$props.keySearchObject;\n      if (!showSearch) return null;\n      if (renderSearch) return renderSearch;\n      var _this$state = _this.state,\n          buttonText = _this$state.buttonText,\n          searchValue = _this$state.searchValue;\n      return _jsx(TextInput, {\n        style: [styles.searchInput, searchInputStyle],\n        onChangeText: function onChangeText(text) {\n          var filteredOptions = initialOptions;\n\n          if (text) {\n            filteredOptions = initialOptions.filter(function (option) {\n              var _option$keySearchObje;\n\n              return typeof option === 'object' && option !== null ? option == null ? void 0 : (_option$keySearchObje = option[keySearchObject]) == null ? void 0 : _option$keySearchObje.toLowerCase().includes(text.toLowerCase().trim()) : option.toLowerCase().includes(text.toLowerCase().trim());\n            });\n          }\n\n          _this.setState({\n            searchValue: text,\n            options: filteredOptions,\n            selectedIndex: filteredOptions.indexOf(buttonText)\n          });\n        },\n        value: searchValue,\n        placeholder: searchPlaceholder\n      });\n    };\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          separators = _ref.separators;\n      var _this$props2 = _this.props,\n          renderRow = _this$props2.renderRow,\n          renderRowComponent = _this$props2.renderRowComponent,\n          renderRowProps = _this$props2.renderRowProps,\n          dropdownTextStyle = _this$props2.dropdownTextStyle,\n          dropdownTextHighlightStyle = _this$props2.dropdownTextHighlightStyle,\n          accessible = _this$props2.accessible,\n          dropdownTextProps = _this$props2.dropdownTextProps,\n          renderRowText = _this$props2.renderRowText;\n      var RowTouchable = renderRowComponent;\n      var selectedIndex = _this.state.selectedIndex;\n      var key = \"row_\" + index;\n      var highlighted = index === selectedIndex;\n      var value = renderRowText && renderRowText(item) || item.toString();\n      var row = !renderRow ? _jsx(Text, _objectSpread(_objectSpread({\n        style: [styles.rowText, dropdownTextStyle, highlighted && styles.highlightedRowText, highlighted && dropdownTextHighlightStyle],\n        testID: item\n      }, dropdownTextProps), {}, {\n        children: value\n      })) : renderRow(item, index, highlighted);\n\n      var touchableProps = _objectSpread({\n        key: key,\n        accessible: accessible,\n        onPress: function onPress() {\n          return _this._onRowPress(item, index, separators);\n        }\n      }, renderRowProps);\n\n      return _jsx(RowTouchable, _objectSpread(_objectSpread({}, touchableProps), {}, {\n        children: row\n      }));\n    };\n\n    _this._renderSeparator = function (_ref2) {\n      var _ref2$leadingItem = _ref2.leadingItem,\n          leadingItem = _ref2$leadingItem === void 0 ? '' : _ref2$leadingItem;\n      var key = \"spr_\" + leadingItem;\n      return _jsx(View, {\n        style: styles.separator\n      }, key);\n    };\n\n    _this._button = null;\n    _this._buttonFrame = null;\n    _this.state = {\n      accessible: !!props.accessible,\n      loading: !props.options,\n      showDropdown: false,\n      buttonText: props.defaultValue,\n      selectedIndex: props.defaultIndex,\n      options: props.options,\n      searchValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(ModalDropdown, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, _objectSpread(_objectSpread({}, this.props), {}, {\n        children: [this._renderButton(), this._renderModal()]\n      }));\n    }\n  }, {\n    key: \"_updatePosition\",\n    value: function _updatePosition(callback) {\n      var _this2 = this;\n\n      if (this._button && this._button.measure) {\n        this._button.measure(function (fx, fy, width, height, px, py) {\n          _this2._buttonFrame = {\n            x: px,\n            y: py,\n            w: width,\n            h: height\n          };\n          callback && callback();\n        });\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this3 = this;\n\n      this._updatePosition(function () {\n        _this3.setState({\n          showDropdown: true\n        });\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.setState({\n        showDropdown: false\n      });\n    }\n  }, {\n    key: \"select\",\n    value: function select(idx) {\n      var _this$props3 = this.props,\n          defaultValue = _this$props3.defaultValue,\n          options = _this$props3.options,\n          defaultIndex = _this$props3.defaultIndex,\n          renderButtonText = _this$props3.renderButtonText;\n      var value = defaultValue;\n\n      if (idx == null || !options || idx >= options.length) {\n        idx = defaultIndex;\n      }\n\n      if (idx >= 0) {\n        value = renderButtonText ? renderButtonText(options[idx]) : options[idx].toString();\n      }\n\n      this.setState({\n        buttonText: value,\n        selectedIndex: idx\n      });\n    }\n  }, {\n    key: \"_renderButton\",\n    value: function _renderButton() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          disabled = _this$props4.disabled,\n          accessible = _this$props4.accessible,\n          children = _this$props4.children,\n          textStyle = _this$props4.textStyle,\n          defaultTextStyle = _this$props4.defaultTextStyle,\n          renderButtonComponent = _this$props4.renderButtonComponent,\n          renderButtonProps = _this$props4.renderButtonProps,\n          renderRightComponent = _this$props4.renderRightComponent,\n          buttonAndRightComponentContainerStyle = _this$props4.buttonAndRightComponentContainerStyle,\n          numberOfLines = _this$props4.numberOfLines;\n      var ButtonTouchable = renderButtonComponent;\n      var RightComponent = renderRightComponent;\n      var _this$state2 = this.state,\n          buttonText = _this$state2.buttonText,\n          selectedIndex = _this$state2.selectedIndex;\n      var buttonTextStyle = selectedIndex < 0 ? [textStyle, defaultTextStyle] : textStyle;\n      return _jsx(ButtonTouchable, _objectSpread(_objectSpread({\n        ref: function ref(button) {\n          return _this4._button = button;\n        },\n        disabled: disabled,\n        accessible: accessible,\n        onPress: this._onButtonPress\n      }, renderButtonProps), {}, {\n        children: children || _jsxs(View, {\n          style: [styles.button, buttonAndRightComponentContainerStyle],\n          children: [_jsx(Text, {\n            style: [styles.buttonText, buttonTextStyle],\n            numberOfLines: numberOfLines,\n            children: buttonText\n          }), _jsx(RightComponent, {})]\n        })\n      }));\n    }\n  }, {\n    key: \"_renderModal\",\n    value: function _renderModal() {\n      var _this$props5 = this.props,\n          animated = _this$props5.animated,\n          accessible = _this$props5.accessible,\n          dropdownStyle = _this$props5.dropdownStyle;\n      var _this$state3 = this.state,\n          showDropdown = _this$state3.showDropdown,\n          loading = _this$state3.loading;\n\n      if (showDropdown && this._buttonFrame) {\n        var frameStyle = this._calcPosition();\n\n        var animationType = animated ? 'fade' : 'none';\n        return _jsx(Modal, {\n          animationType: animationType,\n          visible: true,\n          transparent: true,\n          onRequestClose: this._onRequestClose,\n          supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'],\n          children: _jsx(TouchableWithoutFeedback, {\n            accessible: accessible,\n            disabled: !showDropdown,\n            onPress: this._onModalPress,\n            children: _jsx(View, {\n              style: styles.modal,\n              children: _jsx(View, {\n                style: [styles.dropdown, dropdownStyle, frameStyle],\n                children: loading ? this._renderLoading() : this._renderDropdown()\n              })\n            })\n          })\n        });\n      }\n    }\n  }, {\n    key: \"_calcPosition\",\n    value: function _calcPosition() {\n      var _this$props6 = this.props,\n          dropdownStyle = _this$props6.dropdownStyle,\n          style = _this$props6.style,\n          adjustFrame = _this$props6.adjustFrame,\n          isFullWidth = _this$props6.isFullWidth;\n      var dimensions = Dimensions.get('window');\n      var windowWidth = dimensions.width;\n      var windowHeight = dimensions.height;\n      var dropdownHeight = dropdownStyle && StyleSheet.flatten(dropdownStyle).height || StyleSheet.flatten(styles.dropdown).height;\n      var bottomSpace = windowHeight - this._buttonFrame.y - this._buttonFrame.h;\n      var rightSpace = windowWidth - this._buttonFrame.x;\n      var showInBottom = bottomSpace >= dropdownHeight || bottomSpace >= this._buttonFrame.y;\n      var showInLeft = rightSpace >= this._buttonFrame.x;\n      var positionStyle = {\n        height: dropdownHeight,\n        top: showInBottom ? this._buttonFrame.y + this._buttonFrame.h : Math.max(0, this._buttonFrame.y - dropdownHeight)\n      };\n\n      if (showInLeft) {\n        positionStyle.left = this._buttonFrame.x;\n\n        if (isFullWidth) {\n          positionStyle.right = rightSpace - this._buttonFrame.w;\n        }\n      } else {\n        var dropdownWidth = dropdownStyle && StyleSheet.flatten(dropdownStyle).width || style && StyleSheet.flatten(style).width || -1;\n\n        if (dropdownWidth !== -1) {\n          positionStyle.width = dropdownWidth;\n        }\n\n        positionStyle.right = rightSpace - this._buttonFrame.w;\n      }\n\n      return adjustFrame ? adjustFrame(positionStyle) : positionStyle;\n    }\n  }, {\n    key: \"_renderDropdown\",\n    value: function _renderDropdown() {\n      var _this5 = this;\n\n      var _this$props7 = this.props,\n          scrollEnabled = _this$props7.scrollEnabled,\n          saveScrollPosition = _this$props7.saveScrollPosition,\n          renderSeparator = _this$props7.renderSeparator,\n          showsVerticalScrollIndicator = _this$props7.showsVerticalScrollIndicator,\n          keyboardShouldPersistTaps = _this$props7.keyboardShouldPersistTaps,\n          dropdownListProps = _this$props7.dropdownListProps;\n      var selectedIndex = this.state.selectedIndex;\n      var options = this.state.options;\n      return _jsx(FlatList, _objectSpread(_objectSpread({}, dropdownListProps), {}, {\n        getItemLayout: function getItemLayout(data, index) {\n          return {\n            length: 33 + StyleSheet.hairlineWidth,\n            index: index,\n            offset: (33 + StyleSheet.hairlineWidth) * index\n          };\n        },\n        data: options,\n        ref: function ref(component) {\n          return _this5.flatList = component;\n        },\n        scrollEnabled: scrollEnabled,\n        initialScrollIndex: saveScrollPosition ? selectedIndex : -1,\n        style: styles.list,\n        keyExtractor: function keyExtractor(item, i) {\n          return \"key-\" + i;\n        },\n        renderItem: this._renderItem,\n        ItemSeparatorComponent: renderSeparator || this._renderSeparator,\n        automaticallyAdjustContentInsets: false,\n        showsVerticalScrollIndicator: showsVerticalScrollIndicator,\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        ListHeaderComponent: this._renderSearchInput,\n        onScrollToIndexFailed: function onScrollToIndexFailed(info) {\n          var wait = new Promise(function (resolve) {\n            return setTimeout(resolve, 500);\n          });\n          wait.then(function () {\n            _this5.flatList.scrollToIndex({\n              index: info.index,\n              animated: true\n            });\n          });\n        }\n      }));\n    }\n  }, {\n    key: \"_onRowPress\",\n    value: function _onRowPress(rowData, rowID, highlightRow) {\n      var _this$props8 = this.props,\n          onSelect = _this$props8.onSelect,\n          renderButtonText = _this$props8.renderButtonText,\n          onDropdownWillHide = _this$props8.onDropdownWillHide,\n          multipleSelect = _this$props8.multipleSelect;\n\n      if (!onSelect || onSelect(rowID, rowData) !== false) {\n        var value = renderButtonText && renderButtonText(rowData) || rowData.toString();\n        this.setState({\n          buttonText: value,\n          selectedIndex: rowID\n        });\n      }\n\n      if (!multipleSelect && (!onDropdownWillHide || onDropdownWillHide() !== false)) {\n        this.setState({\n          showDropdown: false\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, state) {\n      var selectedIndex = state.selectedIndex,\n          loading = state.loading;\n      var defaultIndex = nextProps.defaultIndex,\n          defaultValue = nextProps.defaultValue,\n          options = nextProps.options;\n      var newState = null;\n\n      if (selectedIndex < 0) {\n        selectedIndex = defaultIndex;\n        newState = {\n          selectedIndex: selectedIndex\n        };\n\n        if (selectedIndex < 0) {\n          newState.buttonText = defaultValue;\n        }\n      }\n\n      if (!loading !== !options) {\n        if (!newState) {\n          newState = {};\n        }\n\n        newState.loading = !options;\n      }\n\n      if (options !== state.options) {\n        newState.options = options;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return ModalDropdown;\n}(Component);\n\nModalDropdown.propTypes = {\n  disabled: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  saveScrollPosition: PropTypes.bool,\n  defaultIndex: PropTypes.number,\n  defaultValue: PropTypes.string,\n  options: PropTypes.array,\n  accessible: PropTypes.bool,\n  animated: PropTypes.bool,\n  isFullWidth: PropTypes.bool,\n  showsVerticalScrollIndicator: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string,\n  showSearch: PropTypes.bool,\n  keySearchObject: PropTypes.string,\n  renderSearch: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  searchInputStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  searchPlaceholder: PropTypes.string,\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  defaultTextStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownTextStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownTextHighlightStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownListProps: PropTypes.object,\n  dropdownTextProps: PropTypes.object,\n  adjustFrame: PropTypes.func,\n  renderRow: PropTypes.func,\n  renderRowComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  renderRowProps: PropTypes.object,\n  renderSeparator: PropTypes.func,\n  renderButtonText: PropTypes.func,\n  renderRowText: PropTypes.func,\n  renderButtonComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  renderRightComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  renderButtonProps: PropTypes.object,\n  onDropdownWillShow: PropTypes.func,\n  onDropdownWillHide: PropTypes.func,\n  onSelect: PropTypes.func,\n  numberOfLines: PropTypes.number\n};\nModalDropdown.defaultProps = {\n  disabled: false,\n  multipleSelect: false,\n  scrollEnabled: true,\n  saveScrollPosition: true,\n  defaultIndex: -1,\n  defaultValue: 'Please select...',\n  animated: true,\n  isFullWidth: false,\n  showsVerticalScrollIndicator: true,\n  keyboardShouldPersistTaps: 'never',\n  showSearch: false,\n  searchPlaceholder: \"Search\",\n  keySearchObject: 'label',\n  renderRowComponent: Platform.OS === 'ios' ? TouchableOpacity : TouchableHighlight,\n  renderButtonComponent: TouchableOpacity,\n  renderRightComponent: View,\n  numberOfLines: 1\n};\nexport { ModalDropdown as default };\nvar styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonText: {\n    fontSize: 12\n  },\n  modal: {\n    flexGrow: 1\n  },\n  dropdown: {\n    position: 'absolute',\n    height: (33 + StyleSheet.hairlineWidth) * 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: 'lightgray',\n    borderRadius: 2,\n    backgroundColor: 'white',\n    justifyContent: 'center'\n  },\n  loading: {\n    alignSelf: 'center'\n  },\n  list: {},\n  rowText: {\n    paddingHorizontal: 6,\n    paddingVertical: 10,\n    fontSize: 11,\n    color: 'gray',\n    backgroundColor: 'white',\n    textAlignVertical: 'center'\n  },\n  highlightedRowText: {\n    color: 'black'\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: 'lightgray'\n  },\n  searchInput: {\n    borderColor: 'gray',\n    borderWidth: StyleSheet.hairlineWidth,\n    fontSize: 11,\n    paddingHorizontal: 6,\n    paddingVertical: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/node_modules/react-native-modal-dropdown/components/ModalDropdown.js"],"names":["React","Component","PropTypes","TOUCHABLE_ELEMENTS","ModalDropdown","props","_onButtonPress","onDropdownWillShow","show","_onRequestClose","onDropdownWillHide","hide","_onModalPress","_renderLoading","_renderSearchInput","showSearch","renderSearch","searchInputStyle","searchPlaceholder","initialOptions","options","keySearchObject","state","buttonText","searchValue","styles","searchInput","text","filteredOptions","filter","option","toLowerCase","includes","trim","setState","selectedIndex","indexOf","_renderItem","item","index","separators","renderRow","renderRowComponent","renderRowProps","dropdownTextStyle","dropdownTextHighlightStyle","accessible","dropdownTextProps","renderRowText","RowTouchable","key","highlighted","value","toString","row","rowText","highlightedRowText","touchableProps","onPress","_onRowPress","_renderSeparator","leadingItem","separator","_button","_buttonFrame","loading","showDropdown","defaultValue","defaultIndex","_renderButton","_renderModal","callback","measure","fx","fy","width","height","px","py","x","y","w","h","_updatePosition","idx","renderButtonText","length","disabled","children","textStyle","defaultTextStyle","renderButtonComponent","renderButtonProps","renderRightComponent","buttonAndRightComponentContainerStyle","numberOfLines","ButtonTouchable","RightComponent","buttonTextStyle","button","animated","dropdownStyle","frameStyle","_calcPosition","animationType","modal","dropdown","_renderDropdown","style","adjustFrame","isFullWidth","dimensions","Dimensions","get","windowWidth","windowHeight","dropdownHeight","StyleSheet","flatten","bottomSpace","rightSpace","showInBottom","showInLeft","positionStyle","top","Math","max","left","right","dropdownWidth","scrollEnabled","saveScrollPosition","renderSeparator","showsVerticalScrollIndicator","keyboardShouldPersistTaps","dropdownListProps","data","hairlineWidth","offset","component","flatList","list","i","info","wait","Promise","resolve","setTimeout","then","scrollToIndex","rowData","rowID","highlightRow","onSelect","multipleSelect","nextProps","newState","propTypes","bool","number","string","array","oneOfType","func","object","defaultProps","Platform","OS","TouchableOpacity","TouchableHighlight","View","create","flexDirection","alignItems","fontSize","flexGrow","position","borderWidth","borderColor","borderRadius","backgroundColor","justifyContent","alignSelf","paddingHorizontal","paddingVertical","color","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Dimensions,\n  View,\n  Text,\n  TouchableWithoutFeedback,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableHighlight,\n  Modal,\n  ActivityIndicator,\n  FlatList,\n  Platform,\n  TextInput\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst TOUCHABLE_ELEMENTS = [\n  'TouchableHighlight',\n  'TouchableOpacity',\n  'TouchableWithoutFeedback',\n  'TouchableNativeFeedback',\n];\n\nexport default class ModalDropdown extends Component {\n  static propTypes = {\n    disabled: PropTypes.bool,\n    multipleSelect: PropTypes.bool,\n    scrollEnabled: PropTypes.bool,\n    saveScrollPosition: PropTypes.bool,\n    defaultIndex: PropTypes.number,\n    defaultValue: PropTypes.string,\n    options: PropTypes.array,\n    accessible: PropTypes.bool,\n    animated: PropTypes.bool,\n    isFullWidth: PropTypes.bool,\n    showsVerticalScrollIndicator: PropTypes.bool,\n    keyboardShouldPersistTaps: PropTypes.string,\n    showSearch: PropTypes.bool,\n    keySearchObject: PropTypes.string,\n    renderSearch: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n    searchInputStyle: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    searchPlaceholder: PropTypes.string,\n    style: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    textStyle: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    defaultTextStyle: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    dropdownStyle: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    dropdownTextStyle: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    dropdownTextHighlightStyle: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n    dropdownListProps: PropTypes.object,\n    dropdownTextProps: PropTypes.object,\n    adjustFrame: PropTypes.func,\n    renderRow: PropTypes.func,\n    renderRowComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n    renderRowProps: PropTypes.object,\n    renderSeparator: PropTypes.func,\n    renderButtonText: PropTypes.func,\n    renderRowText: PropTypes.func,\n    renderButtonComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n    renderRightComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n    renderButtonProps: PropTypes.object,\n    onDropdownWillShow: PropTypes.func,\n    onDropdownWillHide: PropTypes.func,\n    onSelect: PropTypes.func,\n    numberOfLines: PropTypes.number\n  };\n\n  static defaultProps = {\n    disabled: false,\n    multipleSelect: false,\n    scrollEnabled: true,\n    saveScrollPosition: true,\n    defaultIndex: -1,\n    defaultValue: 'Please select...',\n    animated: true,\n    isFullWidth: false,\n    showsVerticalScrollIndicator: true,\n    keyboardShouldPersistTaps: 'never',\n    showSearch: false,\n    searchPlaceholder: \"Search\",\n    keySearchObject: 'label',\n    renderRowComponent: Platform.OS === 'ios' ? TouchableOpacity : TouchableHighlight,\n    renderButtonComponent: TouchableOpacity,\n    renderRightComponent: View,\n    numberOfLines: 1\n  };\n\n  constructor(props) {\n    super(props);\n    this._button = null;\n    this._buttonFrame = null;\n\n    this.state = {\n      accessible: !!props.accessible,\n      loading: !props.options,\n      showDropdown: false,\n      buttonText: props.defaultValue,\n      selectedIndex: props.defaultIndex,\n      options: props.options,\n      searchValue: '',\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    let { selectedIndex, loading } = state;\n    const { defaultIndex, defaultValue, options } = nextProps;\n    let newState = null;\n\n    if (selectedIndex < 0) {\n      selectedIndex = defaultIndex;\n      newState = {\n        selectedIndex: selectedIndex\n      };\n      if (selectedIndex < 0) {\n        newState.buttonText = defaultValue;\n      }\n    }\n\n    if (!loading !== !options) {\n      if (!newState) {\n        newState = {};\n      }\n      newState.loading = !options;\n    }\n    // this compare only checks an array with no data, doesnt deep check, this comparison use for get api\n    if (options !== state.options) {\n      newState.options = options\n    }\n    return newState;\n  }\n\n  render() {\n    return (\n      <View {...this.props}>\n        {this._renderButton()}\n        {this._renderModal()}\n      </View>\n    );\n  }\n\n  _updatePosition(callback) {\n    if (this._button && this._button.measure) {\n      this._button.measure((fx, fy, width, height, px, py) => {\n        this._buttonFrame = {\n          x: px,\n          y: py,\n          w: width,\n          h: height,\n        };\n        callback && callback();\n      });\n    }\n  }\n\n  show() {\n    this._updatePosition(() => {\n      this.setState({\n        showDropdown: true,\n      });\n    });\n  }\n\n  hide() {\n    this.setState({\n      showDropdown: false,\n    });\n  }\n\n  select(idx) {\n    const {\n      defaultValue,\n      options,\n      defaultIndex,\n      renderButtonText,\n    } = this.props;\n    let value = defaultValue;\n\n    if (idx == null || !options || idx >= options.length) {\n      idx = defaultIndex;\n    }\n    if (idx >= 0) {\n      value = renderButtonText\n        ? renderButtonText(options[idx])\n        : options[idx].toString();\n    }\n\n    this.setState({\n      buttonText: value,\n      selectedIndex: idx,\n    });\n  }\n\n  _renderButton() {\n    const {\n      disabled,\n      accessible,\n      children,\n      textStyle,\n      defaultTextStyle,\n      renderButtonComponent,\n      renderButtonProps,\n      renderRightComponent,\n      buttonAndRightComponentContainerStyle,\n      numberOfLines,\n    } = this.props;\n    const ButtonTouchable = renderButtonComponent;\n    const RightComponent = renderRightComponent;\n    const { buttonText, selectedIndex } = this.state;\n    const buttonTextStyle = selectedIndex < 0 ? [textStyle, defaultTextStyle] : textStyle;\n    return (\n      <ButtonTouchable\n        ref={button => (this._button = button)}\n        disabled={disabled}\n        accessible={accessible}\n        onPress={this._onButtonPress}\n        {...renderButtonProps}\n      >\n        {children || (\n          <View style={[styles.button, buttonAndRightComponentContainerStyle]}>\n            <Text style={[styles.buttonText, buttonTextStyle]} numberOfLines={numberOfLines}>\n              {buttonText}\n            </Text>\n            <RightComponent />\n          </View>\n        )}\n      </ButtonTouchable>\n    );\n  }\n\n  _onButtonPress = () => {\n    const { onDropdownWillShow } = this.props;\n\n    if (!onDropdownWillShow || onDropdownWillShow() !== false) {\n      this.show();\n    }\n  };\n\n  _renderModal() {\n    const { animated, accessible, dropdownStyle } = this.props;\n    const { showDropdown, loading } = this.state;\n\n    if (showDropdown && this._buttonFrame) {\n      const frameStyle = this._calcPosition();\n      const animationType = animated ? 'fade' : 'none';\n\n      return (\n        <Modal\n          animationType={animationType}\n          visible\n          transparent\n          onRequestClose={this._onRequestClose}\n          supportedOrientations={[\n            'portrait',\n            'portrait-upside-down',\n            'landscape',\n            'landscape-left',\n            'landscape-right',\n          ]}\n        >\n          <TouchableWithoutFeedback\n            accessible={accessible}\n            disabled={!showDropdown}\n            onPress={this._onModalPress}\n          >\n            <View style={styles.modal}>\n              <View style={[styles.dropdown, dropdownStyle, frameStyle]}>\n                {loading ? this._renderLoading() : this._renderDropdown()}\n              </View>\n            </View>\n          </TouchableWithoutFeedback>\n        </Modal>\n      );\n    }\n  }\n\n  _calcPosition() {\n    const { dropdownStyle, style, adjustFrame, isFullWidth } = this.props;\n    const dimensions = Dimensions.get('window');\n    const windowWidth = dimensions.width;\n    const windowHeight = dimensions.height;\n    const dropdownHeight =\n      (dropdownStyle && StyleSheet.flatten(dropdownStyle).height) ||\n      StyleSheet.flatten(styles.dropdown).height;\n    const bottomSpace =\n      windowHeight - this._buttonFrame.y - this._buttonFrame.h;\n    const rightSpace = windowWidth - this._buttonFrame.x;\n    const showInBottom =\n      bottomSpace >= dropdownHeight || bottomSpace >= this._buttonFrame.y;\n    const showInLeft = rightSpace >= this._buttonFrame.x;\n    const positionStyle = {\n      height: dropdownHeight,\n      top: showInBottom\n        ? this._buttonFrame.y + this._buttonFrame.h\n        : Math.max(0, this._buttonFrame.y - dropdownHeight),\n    };\n\n    if (showInLeft) {\n      positionStyle.left = this._buttonFrame.x;\n      if (isFullWidth) {\n        positionStyle.right = rightSpace - this._buttonFrame.w;\n      }\n    } else {\n      const dropdownWidth =\n        (dropdownStyle && StyleSheet.flatten(dropdownStyle).width) ||\n        (style && StyleSheet.flatten(style).width) || -1;\n\n      if (dropdownWidth !== -1) {\n        positionStyle.width = dropdownWidth;\n      }\n\n      positionStyle.right = rightSpace - this._buttonFrame.w;\n    }\n\n    return adjustFrame ? adjustFrame(positionStyle) : positionStyle;\n  }\n\n  _onRequestClose = () => {\n    const { onDropdownWillHide } = this.props;\n    if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n      this.hide();\n    }\n  };\n\n  _onModalPress = () => {\n    const { onDropdownWillHide } = this.props;\n    if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n      this.hide();\n    }\n  };\n\n  _renderLoading = () => {\n    return <ActivityIndicator size=\"small\" />;\n  };\n\n  _renderSearchInput = () => {\n    const {\n      showSearch,\n      renderSearch,\n      searchInputStyle,\n      searchPlaceholder,\n      options: initialOptions,\n      keySearchObject,\n    } = this.props;\n\n    if (!showSearch) return null;\n    if (renderSearch) return renderSearch;\n\n    const { buttonText, searchValue } = this.state;\n\n    return (\n      <TextInput\n        style={[styles.searchInput, searchInputStyle]}\n        onChangeText={(text) => {\n          let filteredOptions = initialOptions;\n\n          if (text) {\n            filteredOptions = initialOptions.filter((option) => {\n              return typeof option === 'object' && option !== null\n                ? option?.[keySearchObject]?.toLowerCase().includes(text.toLowerCase().trim())\n                : option.toLowerCase().includes(text.toLowerCase().trim())\n            }\n            );\n          }\n\n          this.setState({\n            searchValue: text,\n            options: filteredOptions,\n            selectedIndex: filteredOptions.indexOf(buttonText)\n          })\n        }}\n        value={searchValue}\n        placeholder={searchPlaceholder}\n      />\n    );\n  };\n\n  _renderDropdown() {\n    const {\n      scrollEnabled,\n      saveScrollPosition,\n      renderSeparator,\n      showsVerticalScrollIndicator,\n      keyboardShouldPersistTaps,\n      dropdownListProps,\n    } = this.props;\n    const { selectedIndex } = this.state;\n    const { options } = this.state;\n\n    return (\n      <FlatList\n        {...dropdownListProps}\n        getItemLayout={(data, index) => { return {length: 33 + StyleSheet.hairlineWidth, index, offset: (33 + StyleSheet.hairlineWidth) * index} }}\n        data={options}\n        ref={component => (this.flatList = component)}\n        scrollEnabled={scrollEnabled}\n        initialScrollIndex={saveScrollPosition ? selectedIndex : -1}\n        style={styles.list}\n        keyExtractor={(item, i) => (`key-${i}`)}\n        renderItem={this._renderItem}\n        ItemSeparatorComponent={renderSeparator || this._renderSeparator}\n        automaticallyAdjustContentInsets={false}\n        showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n        keyboardShouldPersistTaps={keyboardShouldPersistTaps}\n        ListHeaderComponent={this._renderSearchInput}\n        onScrollToIndexFailed={info => {\n          const wait = new Promise(resolve => setTimeout(resolve, 500));\n          wait.then(() => {\n            this.flatList.scrollToIndex({ index: info.index, animated: true });\n          });\n        }}\n      />\n    );\n  }\n\n  _renderItem = ({ item, index, separators }) => {\n    const {\n      renderRow,\n      renderRowComponent,\n      renderRowProps,\n      dropdownTextStyle,\n      dropdownTextHighlightStyle,\n      accessible,\n      dropdownTextProps,\n      renderRowText\n    } = this.props;\n    const RowTouchable = renderRowComponent;\n    const { selectedIndex } = this.state;\n    const key = `row_${index}`;\n    const highlighted = index === selectedIndex;\n    const value =\n      (renderRowText && renderRowText(item)) || item.toString();\n    const row = !renderRow ? (\n      <Text\n        style={[\n          styles.rowText,\n          dropdownTextStyle,\n          highlighted && styles.highlightedRowText,\n          highlighted && dropdownTextHighlightStyle,\n        ]}\n        testID={item}\n        {...dropdownTextProps}\n      >\n        {value}\n      </Text>\n    ) : (\n      renderRow(item, index, highlighted)\n    );\n\n    const touchableProps = {\n      key,\n      accessible,\n      onPress: () => this._onRowPress(item, index, separators),\n      ...renderRowProps\n    };\n\n    return <RowTouchable {...touchableProps}>{row}</RowTouchable>;\n  };\n\n  _onRowPress(rowData, rowID, highlightRow) {\n    const {\n      onSelect,\n      renderButtonText,\n      onDropdownWillHide,\n      multipleSelect\n    } = this.props;\n\n    if (!onSelect || onSelect(rowID, rowData) !== false) {\n      const value =\n        (renderButtonText && renderButtonText(rowData)) || rowData.toString();\n      this.setState({\n        buttonText: value,\n        selectedIndex: rowID,\n      });\n    }\n\n    if (!multipleSelect &&\n      (!onDropdownWillHide || onDropdownWillHide() !== false)\n    ) {\n      this.setState({\n        showDropdown: false,\n      });\n    }\n  }\n\n  _renderSeparator = ({ leadingItem = '' }) => {\n    const key = `spr_${leadingItem}`;\n\n    return <View style={styles.separator} key={key} />;\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonText: {\n    fontSize: 12,\n  },\n  modal: {\n    flexGrow: 1,\n  },\n  dropdown: {\n    position: 'absolute',\n    height: (33 + StyleSheet.hairlineWidth) * 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: 'lightgray',\n    borderRadius: 2,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n  },\n  loading: {\n    alignSelf: 'center',\n  },\n  list: {\n    // flexGrow: 1,\n  },\n  rowText: {\n    paddingHorizontal: 6,\n    paddingVertical: 10,\n    fontSize: 11,\n    color: 'gray',\n    backgroundColor: 'white',\n    textAlignVertical: 'center',\n  },\n  highlightedRowText: {\n    color: 'black',\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: 'lightgray',\n  },\n  searchInput: {\n    borderColor: 'gray',\n    borderWidth: StyleSheet.hairlineWidth,\n    fontSize: 11,\n    paddingHorizontal: 6,\n    paddingVertical: 10,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}