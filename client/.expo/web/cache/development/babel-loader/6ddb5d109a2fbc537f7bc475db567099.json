{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport List from \"../components/List\";\nimport TodoForm from \"../components/TodoForm\";\nimport { getTodos } from \"../http/todoAPI\";\nimport { logout } from \"../http/userAPI\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Todo = function Todo() {\n  var _useAppSelector = useAppSelector(function (state) {\n    return state.user;\n  }),\n      loading = _useAppSelector.loading,\n      user = _useAppSelector.user,\n      userError = _useAppSelector.userError;\n\n  var _useAppSelector2 = useAppSelector(function (state) {\n    return state.todo;\n  }),\n      loadingTodos = _useAppSelector2.loadingTodos,\n      todos = _useAppSelector2.todos,\n      todoError = _useAppSelector2.todoError;\n\n  var dispatch = useAppDispatch();\n  console.log(todos);\n  useEffect(function () {\n    var getTodosFromDB = function getTodosFromDB() {\n      return _regeneratorRuntime.async(function getTodosFromDB$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user && dispatch(getTodos(user));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }, []);\n  return _jsxs(View, {\n    children: [!!todoError && _jsx(Text, {\n      children: todoError\n    }), !!userError && _jsx(Text, {\n      children: userError\n    }), !!loading || !!loadingTodos && _jsx(Text, {\n      children: \"Loading...\"\n    }), _jsx(TodoForm, {}), _jsx(List, {\n      todos: todos\n    }), _jsx(Button, {\n      title: \"Log out\",\n      onPress: function onPress() {\n        return dispatch(logout());\n      }\n    })]\n  });\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/pages/Todo.tsx"],"names":["React","useEffect","List","TodoForm","getTodos","logout","useAppDispatch","useAppSelector","Todo","state","user","loading","userError","todo","loadingTodos","todos","todoError","dispatch","console","log","getTodosFromDB"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AASA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT;AACA,SAASC,MAAT;AACA,SAASC,cAAT,EAAyBC,cAAzB;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,wBAAqCD,cAAc,CAAC,UAACE,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAnD;AAAA,MAAQC,OAAR,mBAAQA,OAAR;AAAA,MAAiBD,IAAjB,mBAAiBA,IAAjB;AAAA,MAAuBE,SAAvB,mBAAuBA,SAAvB;;AACA,yBAA2CL,cAAc,CACvD,UAACE,KAAD;AAAA,WAAWA,KAAK,CAACI,IAAjB;AAAA,GADuD,CAAzD;AAAA,MAAQC,YAAR,oBAAQA,YAAR;AAAA,MAAsBC,KAAtB,oBAAsBA,KAAtB;AAAA,MAA6BC,SAA7B,oBAA6BA,SAA7B;;AAGA,MAAMC,QAAQ,GAAGX,cAAc,EAA/B;AACFY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEEd,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMmB,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AACxBV,cAAAA,IAAI,IAAIO,QAAQ,CAACb,QAAQ,CAACM,IAAD,CAAT,CAAhB;;AADwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;AAIA,GALQ,EAKN,EALM,CAAT;AAOA,SACE,MAAC,IAAD;AAAA,eACG,CAAC,CAACM,SAAF,IAAe,KAAC,IAAD;AAAA,gBAAOA;AAAP,MADlB,EAEG,CAAC,CAACJ,SAAF,IAAe,KAAC,IAAD;AAAA,gBAAOA;AAAP,MAFlB,EAGG,CAAC,CAACD,OAAF,IAAa,CAAC,CAACG,YAAF,IAAkB,KAAC,IAAD;AAAA;AAAA,MAHlC,EAIE,KAAC,QAAD,KAJF,EAKE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC;AAAb,MALF,EAME,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE;AAAA,eAAME,QAAQ,CAACZ,MAAM,EAAP,CAAd;AAAA;AAAjC,MANF;AAAA,IADF;AAUD,CAzBD;;AA2BA,eAAeG,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  Pressable,\r\n  Button,\r\n} from \"react-native\";\r\nimport List from \"../components/List\";\r\nimport TodoForm from \"../components/TodoForm\";\r\nimport { getTodos } from \"../http/todoAPI\";\r\nimport { logout } from \"../http/userAPI\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\n\r\nconst Todo = () => {\r\n  const { loading, user, userError } = useAppSelector((state) => state.user);\r\n  const { loadingTodos, todos, todoError } = useAppSelector(\r\n    (state) => state.todo\r\n  );\r\n  const dispatch = useAppDispatch();\r\nconsole.log(todos);\r\n\r\n  useEffect(() => {\r\n\t  const getTodosFromDB = async () => {\r\n\t\tuser && dispatch(getTodos(user));\r\n\r\n\t  }\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      {!!todoError && <Text>{todoError}</Text>}\r\n      {!!userError && <Text>{userError}</Text>}\r\n      {!!loading || !!loadingTodos && <Text>Loading...</Text>}\r\n      <TodoForm />\r\n      <List todos={todos} />\r\n      <Button title=\"Log out\" onPress={() => dispatch(logout())} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}