{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { instance } from \"./index\";\nimport jwtDecode from \"jwt-decode\";\nexport var registration = function registration(username, password) {\n  var response;\n  return _regeneratorRuntime.async(function registration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          response = instance.post(\"/api/user/registration\", {\n            username: username,\n            password: password\n          });\n          return _context.abrupt(\"return\", jwtDecode(response));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var login = function login(username, password) {\n  var _instance$post, data;\n\n  return _regeneratorRuntime.async(function login$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _instance$post = instance.post(\"/api/user/login\", {\n            username: username,\n            password: password\n          }), data = _instance$post.data;\n          return _context2.abrupt(\"return\", jwtDecode(data.token));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var check = function check() {\n  var response;\n  return _regeneratorRuntime.async(function check$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          response = instance.get(\"/api/user/auth\");\n          return _context3.abrupt(\"return\", response);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/http/userAPI.ts"],"names":["instance","jwtDecode","registration","username","password","response","post","login","data","token","check","get"],"mappings":";AAAA,SAASA,QAAT;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAC1BC,QAD0B,EAE1BC,QAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAIpBC,UAAAA,QAJoB,GAITL,QAAQ,CAACM,IAAT,CAAc,wBAAd,EAAwC;AACvDH,YAAAA,QAAQ,EAARA,QADuD;AAEvDC,YAAAA,QAAQ,EAARA;AAFuD,WAAxC,CAJS;AAAA,2CASnBH,SAAS,CAACI,QAAD,CATU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAYP,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,CACnBJ,QADmB,EAEnBC,QAFmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BAIGJ,QAAQ,CAACM,IAAT,CAAc,iBAAd,EAAiC;AACrDH,YAAAA,QAAQ,EAARA,QADqD;AAErDC,YAAAA,QAAQ,EAARA;AAFqD,WAAjC,CAJH,EAIXI,IAJW,kBAIXA,IAJW;AAAA,4CAQZP,SAAS,CAACO,IAAI,CAACC,KAAN,CARG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AAWP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AACbL,UAAAA,QADa,GACFL,QAAQ,CAACW,GAAT,CAAa,gBAAb,CADE;AAAA,4CAEZN,QAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["import { instance } from \"./index\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport const registration = async (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n  const response = instance.post(\"/api/user/registration\", {\r\n    username,\r\n    password,\r\n  });\r\n\r\n  return jwtDecode(response);\r\n};\r\n\r\nexport const login = async (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n  const { data }: any = instance.post(\"/api/user/login\", {\r\n    username,\r\n    password,\r\n  });\r\n  return jwtDecode(data.token);\r\n};\r\n\r\nexport const check = async () => {\r\n  const response = instance.get(\"/api/user/auth\");\r\n  return response;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}