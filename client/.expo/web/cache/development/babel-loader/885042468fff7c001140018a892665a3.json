{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Checkbox from \"react-native-bouncy-checkbox\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { checkTodosDB } from \"../../http/todoAPI\";\nimport { checkTodo } from \"../../store/todoSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ListItem = function ListItem(_ref) {\n  var todo = _ref.todo;\n  var id = todo.id,\n      checked = todo.checked,\n      title = todo.title,\n      priority = todo.priority,\n      date = todo.date;\n  var dispatch = useAppDispatch();\n\n  var onCheck = function onCheck() {\n    dispatch(checkTodo(id));\n  };\n\n  useEffect(function () {\n    checkTodosDB(todo);\n  }, [checked]);\n  return _jsx(TouchableOpacity, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Checkbox, {\n        isChecked: checked,\n        useNativeDriver: false,\n        onPress: onCheck\n      }), _jsx(Text, {\n        style: styles.title,\n        children: title\n      }), _jsx(Text, {\n        style: styles.title,\n        children: date\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#e4e3e3\",\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 15,\n    padding: 10,\n    height: 40,\n    width: \"100%\"\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: \"#e4e3e3\"\n  },\n  input: {\n    padding: 10,\n    backgroundColor: \"#e4e3e3\",\n    borderRadius: 20,\n    width: \"100\",\n    height: 50,\n    marginBottom: 15\n  }\n});\nexport default ListItem;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/List/ListItem.tsx"],"names":["React","useEffect","Checkbox","useAppDispatch","checkTodosDB","checkTodo","ListItem","todo","id","checked","title","priority","date","dispatch","onCheck","styles","container","StyleSheet","create","display","flexDirection","alignItems","borderColor","borderWidth","borderRadius","marginBottom","padding","height","width","fontSize","fontWeight","color","input","backgroundColor"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAA+C,OAA/C;;;;;AAGA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,cAAT;AACA,SAASC,YAAT;AACA,SAASC,SAAT;;;;AAOA,IAAMC,QAAuB,GAAG,SAA1BA,QAA0B,OAAe;AAAA,MAAZC,IAAY,QAAZA,IAAY;AAC7C,MAAQC,EAAR,GAA8CD,IAA9C,CAAQC,EAAR;AAAA,MAAYC,OAAZ,GAA8CF,IAA9C,CAAYE,OAAZ;AAAA,MAAqBC,KAArB,GAA8CH,IAA9C,CAAqBG,KAArB;AAAA,MAA2BC,QAA3B,GAA8CJ,IAA9C,CAA2BI,QAA3B;AAAA,MAAqCC,IAArC,GAA8CL,IAA9C,CAAqCK,IAArC;AAEA,MAAMC,QAAQ,GAAGV,cAAc,EAA/B;;AAEA,MAAMW,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,QAAQ,CAACR,SAAS,CAACG,EAAD,CAAV,CAAR;AAED,GAHD;;AAKAP,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,YAAY,CAACG,IAAD,CAAZ;AACD,GAFQ,EAEN,CAACE,OAAD,CAFM,CAAT;AAIA,SACE,KAAC,gBAAD;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,QAAD;AACE,QAAA,SAAS,EAAEP,OADb;AAEE,QAAA,eAAe,EAAE,KAFnB;AAGE,QAAA,OAAO,EAAEK;AAHX,QADF,EAME,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACL,KAApB;AAAA,kBAA4BA;AAA5B,QANF,EAOE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACL,KAApB;AAAA,kBAA4BE;AAA5B,QAPF;AAAA;AADF,IADF;AAcD,CA5BD;;AA8BA,IAAMG,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,WAAW,EAAE,CALJ;AAMTC,IAAAA,YAAY,EAAE,EANL;AAOTC,IAAAA,YAAY,EAAE,EAPL;AAQTC,IAAAA,OAAO,EAAE,EARA;AASTC,IAAAA,MAAM,EAAE,EATC;AAUTC,IAAAA,KAAK,EAAE;AAVE,GADoB;AAa/BlB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,KAFP;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAbwB;AAkB/BC,EAAAA,KAAK,EAAE;AACLN,IAAAA,OAAO,EAAE,EADJ;AAELO,IAAAA,eAAe,EAAE,SAFZ;AAGLT,IAAAA,YAAY,EAAE,EAHT;AAILI,IAAAA,KAAK,EAAE,KAJF;AAKLD,IAAAA,MAAM,EAAE,EALH;AAMLF,IAAAA,YAAY,EAAE;AANT;AAlBwB,CAAlB,CAAf;AA4BA,eAAenB,QAAf","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\nimport { Button, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { ITodo } from \"../../interfaces/ITodo\";\r\nimport Checkbox from \"react-native-bouncy-checkbox\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\nimport { checkTodosDB, deleteTodosDB } from \"../../http/todoAPI\";\r\nimport { checkTodo, deleteTodo } from \"../../store/todoSlice\";\r\n\r\ninterface TodoProps {\r\n  todo: ITodo,\r\n\r\n}\r\n\r\nconst ListItem: FC<TodoProps> = ({ todo, }) => {\r\n  const { id, checked, title,priority, date } = todo;\r\n  // const [check, setCheck] = useState(checked)\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onCheck = () => {\r\n    dispatch(checkTodo(id));\r\n\t \r\n  };\r\n\r\n  useEffect(() => {\r\n    checkTodosDB(todo);\r\n  }, [checked]);\r\n\r\n  return (\r\n    <TouchableOpacity>\r\n      <View style={styles.container}>\r\n        <Checkbox\r\n          isChecked={checked}\r\n          useNativeDriver={false}\r\n          onPress={onCheck}\r\n        />\r\n        <Text style={styles.title}>{title}</Text>\r\n        <Text style={styles.title}>{date}</Text>\r\n\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderColor: \"#e4e3e3\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    marginBottom: 15,\r\n    padding: 10,\r\n    height: 40,\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n    color: \"#e4e3e3\",\r\n  },\r\n  input: {\r\n    padding: 10,\r\n    backgroundColor: \"#e4e3e3\",\r\n    borderRadius: 20,\r\n    width: \"100\",\r\n    height: 50,\r\n    marginBottom: 15,\r\n  },\r\n});\r\n\r\nexport default ListItem;\r\n"]},"metadata":{},"sourceType":"module"}