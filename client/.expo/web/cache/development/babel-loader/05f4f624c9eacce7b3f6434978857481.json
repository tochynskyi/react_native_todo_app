{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { instance, authInstance } from \"./index\";\nimport jwtDecode from \"jwt-decode\";\nexport var registration = function registration(username, password) {\n  var _await$instance$post, data;\n\n  return _regeneratorRuntime.async(function registration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\");\n\n        case 3:\n          _await$instance$post = _context.sent;\n          data = _await$instance$post.data;\n          AsyncStorage.setItem(\"token\", data.token);\n          return _context.abrupt(\"return\", jwtDecode(data.token));\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var login = function login(username, password) {\n  var _await$instance$post2, data;\n\n  return _regeneratorRuntime.async(function login$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(instance.post(\"/api/user/login\", {\n            username: username,\n            password: password\n          }));\n\n        case 2:\n          _await$instance$post2 = _context2.sent;\n          data = _await$instance$post2.data;\n          AsyncStorage.setItem(\"token\", data.token);\n          return _context2.abrupt(\"return\", jwtDecode(data.token));\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var check = function check() {\n  var _await$authInstance$g, data;\n\n  return _regeneratorRuntime.async(function check$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(authInstance.get(\"/api/user/auth\"));\n\n        case 2:\n          _await$authInstance$g = _context3.sent;\n          data = _await$authInstance$g.data;\n          AsyncStorage.setItem(\"token\", data.token);\n          return _context3.abrupt(\"return\", jwtDecode(data.token));\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/http/userAPI.ts"],"names":["AsyncStorage","instance","authInstance","jwtDecode","registration","username","password","data","setItem","token","login","post","check","get"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAC1BC,QAD0B,EAE1BC,QAF0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAKlBC,UAAAA,IALkB,wBAKlBA,IALkB;AAS1BP,UAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC;AAT0B,2CAUnBN,SAAS,CAACI,IAAI,CAACE,KAAN,CAVU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAaP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CACnBL,QADmB,EAEnBC,QAFmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIIL,QAAQ,CAACU,IAAT,CAAc,iBAAd,EAAiC;AACtDN,YAAAA,QAAQ,EAARA,QADsD;AAEtDC,YAAAA,QAAQ,EAARA;AAFsD,WAAjC,CAJJ;;AAAA;AAAA;AAIXC,UAAAA,IAJW,yBAIXA,IAJW;AAQnBP,UAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC;AARmB,4CAUZN,SAAS,CAACI,IAAI,CAACE,KAAN,CAVG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AAaP,OAAO,IAAMG,KAAK,GAAG,SAARA,KAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIV,YAAY,CAACW,GAAb,CAAiB,gBAAjB,CADJ;;AAAA;AAAA;AACXN,UAAAA,IADW,yBACXA,IADW;AAEnBP,UAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC;AAFmB,4CAGZN,SAAS,CAACI,IAAI,CAACE,KAAN,CAHG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { instance, authInstance } from \"./index\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport const registration = async (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n\treturn\r\n  const { data } = await instance.post(\"/api/user/registration\", {\r\n    username,\r\n    password,\r\n  });\r\n  AsyncStorage.setItem(\"token\", data.token);\r\n  return jwtDecode(data.token);\r\n};\r\n\r\nexport const login = async (\r\n  username: string | number,\r\n  password: string | number\r\n) => {\r\n  const { data } = await instance.post(\"/api/user/login\", {\r\n    username,\r\n    password,\r\n  });\r\n  AsyncStorage.setItem(\"token\", data.token);\r\n\r\n  return jwtDecode(data.token);\r\n};\r\n\r\nexport const check = async () => {\r\n  const { data } = await authInstance.get(\"/api/user/auth\");\r\n  AsyncStorage.setItem(\"token\", data.token);\r\n  return jwtDecode(data.token);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}