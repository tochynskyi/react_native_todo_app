{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Checkbox from \"react-native-bouncy-checkbox\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { checkTodosDB } from \"../../http/todoAPI\";\nimport { checkTodo } from \"../../store/todoSlice\";\nimport { Colors } from \"../../styles/colors\";\nimport dayjs from \"dayjs\";\nimport PriorityCircle from \"../PriorityCircle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ListItem = function ListItem(_ref) {\n  var todo = _ref.todo;\n  var id = todo.id,\n      checked = todo.checked,\n      title = todo.title,\n      priority = todo.priority,\n      addDate = todo.addDate;\n  var dispatch = useAppDispatch();\n  console.log(priority);\n\n  var onCheck = function onCheck() {\n    dispatch(checkTodo(id));\n  };\n\n  useEffect(function () {\n    checkTodosDB(todo);\n  }, [checked]);\n  return _jsx(TouchableOpacity, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Checkbox, {\n        isChecked: checked,\n        useNativeDriver: false,\n        onPress: onCheck\n      }), _jsxs(View, {\n        style: styles.info,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: title\n        }), _jsx(Text, {\n          style: styles.date,\n          children: dayjs(addDate).format(\"D MMM\")\n        })]\n      }), _jsx(PriorityCircle, {\n        priority: priority\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: 'center',\n    flexWrap: \"wrap\",\n    backgroundColor: Colors.white,\n    borderWidth: 1,\n    borderColor: Colors.white,\n    borderRadius: 15,\n    marginBottom: 5,\n    padding: 15,\n    height: \"auto\",\n    width: \"100%\"\n  },\n  info: {\n    flex: 1\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"500\",\n    color: Colors.black\n  },\n  date: {\n    fontSize: 14,\n    color: Colors.gray\n  }\n});\nexport default ListItem;","map":{"version":3,"sources":["C:/Users/Сергій/Desktop/Проекти/React Native/Todo-app/client/components/List/ListItem.tsx"],"names":["React","useEffect","Checkbox","useAppDispatch","checkTodosDB","checkTodo","Colors","dayjs","PriorityCircle","ListItem","todo","id","checked","title","priority","addDate","dispatch","console","log","onCheck","styles","container","info","date","format","StyleSheet","create","display","flexDirection","alignItems","flexWrap","backgroundColor","white","borderWidth","borderColor","borderRadius","marginBottom","padding","height","width","flex","fontSize","fontWeight","color","black","gray"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\nimport { Button, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { ITodo } from \"../../interfaces/ITodo\";\r\nimport Checkbox from \"react-native-bouncy-checkbox\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\nimport { checkTodosDB, deleteTodosDB } from \"../../http/todoAPI\";\r\nimport { checkTodo, deleteTodo } from \"../../store/todoSlice\";\r\nimport { Colors } from \"../../styles/colors\";\r\nimport dayjs from \"dayjs\";\r\nimport PriorityCircle from \"../PriorityCircle\";\r\n\r\ninterface TodoProps {\r\n  todo: ITodo;\r\n}\r\n\r\nconst ListItem: FC<TodoProps> = ({ todo }) => {\r\n  const { id, checked, title, priority, addDate } = todo;\r\n  const dispatch = useAppDispatch();\r\n\r\n  console.log(priority);\r\n\r\n  const onCheck = () => {\r\n    dispatch(checkTodo(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkTodosDB(todo);\r\n  }, [checked]);\r\n\r\n  return (\r\n    <TouchableOpacity>\r\n      <View style={styles.container}>\r\n        <Checkbox\r\n          isChecked={checked}\r\n          useNativeDriver={false}\r\n          onPress={onCheck}\r\n        />\r\n        <View style={styles.info}>\r\n          <Text style={styles.title}>{title}</Text>\r\n          <Text style={styles.date}>{dayjs(addDate).format(\"D MMM\")}</Text>\r\n        </View>\r\n\t\t  <PriorityCircle priority={priority} />\r\n\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n\t alignItems: 'center',\r\n    flexWrap: \"wrap\",\r\n    backgroundColor: Colors.white,\r\n    borderWidth: 1,\r\n    borderColor: Colors.white,\r\n    borderRadius: 15,\r\n    marginBottom: 5,\r\n    padding: 15,\r\n    height: \"auto\",\r\n    width: \"100%\",\r\n  },\r\n  info: {\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n    color: Colors.black,\r\n  },\r\n  date: {\r\n    fontSize: 14,\r\n    color: Colors.gray,\r\n  },\r\n});\r\n\r\nexport default ListItem;\r\n"]},"metadata":{},"sourceType":"module"}